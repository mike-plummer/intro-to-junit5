{"version":3,"sources":["webpack:///0.js","webpack:///./~/reveal.js/plugin/markdown/marked.js","webpack:///./~/reveal.js/js/reveal.js","webpack:///./~/reveal.js/lib/js/classList.js","webpack:///./~/reveal.js/lib/js/head.min.js","webpack:///./~/reveal.js/lib/js/html5shiv.js"],"names":["webpackJsonp","379","module","exports","__webpack_require__","p","77","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","Reveal","call","this","initialize","options","initialized","checkCapabilities","features","transforms2d","transforms3d","dom","wrapper","document","querySelector","slides","window","addEventListener","layout","query","getQueryHash","extend","config","hideAddressBar","load","body","setAttribute","images","toArray","getElementsByTagName","iframes","lazyLoadable","concat","i","len","length","element","getAttribute","removeAttribute","isMobileDevice","test","UA","isChrome","testElement","createElement","style","requestAnimationFrameMethod","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","canvas","getContext","overviewTransitions","zoom","proceed","scriptsAsync","head","js","apply","start","loadScript","s","ready","src","match","callback","scriptsToPreload","scripts","dependencies","condition","async","push","setupDOM","setupPostMessage","setupScrollPrevention","resetVerticalSlides","configure","readURL","updateBackground","setTimeout","classList","remove","loaded","add","dispatchEvent","indexh","indexv","currentSlide","isPrintingPDF","removeEventListeners","readyState","setupPDF","background","createSingletonNode","progress","progressbar","slideNumber","speakerNotes","controls","controlsLeft","querySelectorAll","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","statusDiv","createStatusDiv","getElementById","position","height","width","overflow","clip","appendChild","getStatusText","node","text","nodeType","textContent","isAriaHidden","isDisplayHidden","getComputedStyle","childNodes","forEach","child","slideSize","getComputedSlideSize","innerWidth","innerHeight","pageWidth","Math","floor","margin","pageHeight","slideWidth","slideHeight","injectStyleSheet","layoutSlideContents","HORIZONTAL_SLIDES_SELECTOR","hslide","h","contains","vslide","v","SLIDES_SELECTOR","slide","left","top","contentHeight","scrollHeight","numberOfPages","max","ceil","min","pdfMaxPagesPerSlide","center","page","className","pdfPageHeightOffset","parentNode","insertBefore","slideBackgroundElement","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","innerHTML","nextSibling","bottom","showSlideNumber","slideNumberH","parseInt","slideNumberV","numberElement","formatSlideNumber","fragment","setInterval","scrollTop","scrollLeft","container","tagname","classname","nodes","testNode","createBackgrounds","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundImage","backgroundSize","parallaxBackgroundSize","data","backgroundVideo","backgroundIframe","backgroundColor","backgroundRepeat","backgroundPosition","backgroundTransition","replace","computedBackgroundStyle","rgb","colorToRgb","a","colorBrightness","postMessage","event","charAt","JSON","parse","method","args","numberOfSlides","transition","transitionSpeed","display","shuffle","rtl","pause","resume","mouseWheel","onDocumentMouseScroll","removeEventListener","rollingLinks","enableRollingLinks","disableRollingLinks","previewLinks","enablePreviewLinks","disablePreviewLinks","autoSlidePlayer","destroy","autoSlide","autoSlideStoppable","Playback","Date","now","autoSlideStartTime","on","onAutoSlidePlayerClick","autoSlidePaused","fragments","slideNumberDisplay","isSpeakerNotes","sync","addEventListeners","eventsAreBound","onWindowHashChange","onWindowResize","touch","onTouchStart","onTouchMove","onTouchEnd","navigator","pointerEnabled","onPointerDown","onPointerMove","onPointerUp","msPointerEnabled","keyboard","onDocumentKeyDown","onDocumentKeyPress","onProgressClicked","focusBodyOnPageVisibilityChange","visibilityChange","onPageVisibilityChange","pointerEvents","eventName","el","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","b","o","Array","prototype","slice","deserialize","value","parseFloat","distanceBetween","dx","x","dy","y","sqrt","transformElement","transform","WebkitTransform","MozTransform","msTransform","transformSlides","transforms","slidesTransform","overview","tag","type","styleSheet","cssText","createTextNode","closestParent","target","selector","parent","matchesMethod","matches","matchesSelector","msMatchesSelector","color","hex3","r","g","hex6","substr","rgba","getRemainingHeight","newHeight","oldHeight","offsetHeight","location","search","removeAddressBar","scrollTo","createEvent","initEvent","postMessageEvents","self","stringify","namespace","state","getState","anchors","anchor","span","onPreviewLinkClicked","showPreview","url","closeOverlay","overlay","join","preventDefault","toggleHelp","override","showHelp","help","html","key","keyboardShortcuts","removeChild","size","scale","presentationWidth","presentationHeight","minScale","maxScale","right","updateProgress","updateParallax","isOverview","updateOverview","remainingHeight","nodeName","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","offsetWidth","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","hasAttribute","activateOverview","cancelAutoSlide","onOverviewSlideClicked","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","layoutOverview","hbackground","vbackground","vmin","deactivateOverview","cueAutoSlide","toggleOverview","isVerticalSlide","enterFullscreen","documentElement","requestMethod","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","wasPaused","togglePause","isPaused","toggleAutoSlide","resumeAutoSlide","pauseAutoSlide","isAutoSliding","f","previousSlide","horizontalSlides","stateBefore","indexhBefore","indexvBefore","updateSlides","VERTICAL_SLIDES_SELECTOR","stateLoop","j","splice","pop","currentHorizontalSlide","currentVerticalSlides","navigateFragment","slideChanged","origin","HOME_SLIDE_SELECTOR","stopEmbeddedContent","startEmbeddedContent","updateControls","updateSlideNumber","updateNotes","writeURL","sortAllFragments","formatEmbeddedContent","autoPlayMedia","horizontalSlide","verticalSlide","verticalSlides","sortFragments","random","index","slidesLength","printMode","loop","reverse","pastFragments","pastFragment","futureFragments","futureFragment","slideState","split","distanceX","distanceY","horizontalSlidesLength","viewDistance","Number","MAX_VALUE","verticalSlidesLength","abs","showSlide","hideSlide","oy","getProgress","format","getSlidePastCount","getTotalSlides","delimiter","isNaN","routes","availableRoutes","availableFragments","up","down","prev","next","includeAll","currentBackground","horizontalPast","horizontalFuture","backgroundh","backgroundv","previousBackground","backgroundImageURL","opacity","previousBackgroundHash","currentBackgroundHash","classToBubble","backgroundWidth","backgroundHeight","horizontalOffsetMultiplier","horizontalOffset","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","verticalSlideCount","parallaxBackgroundVertical","media","sources","source","indices","getIndices","getSlideBackground","backgroundVideoLoop","backgroundVideoMuted","video","muted","autoplay","iframe","maxHeight","maxWidth","hiddenFragments","_appendParamToIframeSource","sourceAttribute","sourceURL","param","indexOf","play","startEmbeddedMedia","startEmbeddedIframe","isAttachedToDOM","isVisible","currentTime","contentWindow","pastCount","mainLoop","totalCount","allFragments","hash","bits","name","delay","history","clearTimeout","writeURLTimeout","id","isVertical","currentFragment","getSlides","getSlide","horizontalBackground","verticalBackgrounds","indexf","paused","setState","pausedFlag","overviewFlag","ordered","unordered","sorted","group","offset","lastVisibleFragment","fragmentsShown","fragmentsHidden","nextFragment","previousFragment","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","duration","playbackRate","isLastSlide","autoSlideTimeout","autoSlideMethod","navigateNext","setPlaying","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","isSwipePrevented","onUserInput","shiftKey","charCode","keyboardCondition","autoSlideWasPaused","activeElementIsCE","activeElement","contentEditable","activeElementIsInput","tagName","activeElementIsNotes","keyCode","altKey","ctrlKey","metaKey","resumeKeyCodes","triggered","startX","touches","clientX","startY","clientY","startCount","startSpan","captured","currentX","currentY","currentSpan","threshold","deltaX","deltaY","embedded","pointerType","MSPOINTER_TYPE_TOUCH","lastMouseWheelStep","delta","detail","wheelDelta","slidesTotal","slideIndex","webkitHidden","msHidden","hidden","blur","focus","currentTarget","progressCheck","diameter","diameter2","thickness","playing","progressOffset","context","render","VERSION","userAgent","POSITIVE_INFINITY","N  ,  SPACE","P","&#8592;  ,  H","&#8594;  ,  L","&#8593;  ,  K","&#8595;  ,  J","Home","End","B  ,  .","F","ESC, O","wasPlaying","animate","progressBefore","bind","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","translate","fillRect","moveTo","lineTo","restore","listener","off","prevFragment","navigateTo","getPreviousSlide","getCurrentSlide","getScale","getConfig","shift","unescape","isFirstSlide","nextElementSibling","isReady","useCapture","triggerKey","registerKeyboardShortcut","78","m","HTMLElement","Element","Object","k","String","trim","c","q","n","code","DOMException","message","d","_updateClassName","toString","e","Error","item","toggle","defineProperty","l","get","enumerable","configurable","number","__defineGetter__","79","t","RegExp","tt","clientWidth","outerWidth","screen","u","screens","screensCss","gt","gte","lt","lte","eq","clientHeight","outerHeight","feature","it","w","nt","rt","ut","browsers","ie","browserCss","html5","section","head_conf","arguments","toLowerCase","exec","documentMode","browser","version","pathname","substring","attachEvent","toUpperCase","gradient","textshadow","textShadow","multiplebgs","boxshadow","borderimage","borderradius","cssreflections","csstransforms","csstransitions","retina","devicePixelRatio","fontface","et","_done","ot","success","failure","hasOwnProperty","st","ft","onpreload","ht","ct","ALL","at","onload","onreadystatechange","onerror","errorTimeout","cssTimeout","cssRetries","styleSheets","href","rel","defer","lastChild","vt","yt","readyTimeout","detachEvent","opera","frameElement","wt","doScroll","pt","80"],"mappings":"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","file":"0.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 379:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"node_modules/reveal.js/plugin/markdown/marked.js\";\n\n/***/ }),\n\n/***/ 77:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * reveal.js\n * http://lab.hakim.se/reveal-js\n * MIT licensed\n *\n * Copyright (C) 2017 Hakim El Hattab, http://hakim.se\n */\n(function( root, factory ) {\n\tif( true ) {\n\t\t// AMD. Register as an anonymous module.\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\troot.Reveal = factory();\n\t\t\treturn root.Reveal;\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if( typeof exports === 'object' ) {\n\t\t// Node. Does not work with strict CommonJS.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals.\n\t\troot.Reveal = factory();\n\t}\n}( this, function() {\n\n\t'use strict';\n\n\tvar Reveal;\n\n\t// The reveal.js version\n\tvar VERSION = '3.5.0';\n\n\tvar SLIDES_SELECTOR = '.slides section',\n\t\tHORIZONTAL_SLIDES_SELECTOR = '.slides>section',\n\t\tVERTICAL_SLIDES_SELECTOR = '.slides>section.present>section',\n\t\tHOME_SLIDE_SELECTOR = '.slides>section:first-of-type',\n\t\tUA = navigator.userAgent,\n\n\t\t// Configuration defaults, can be overridden at initialization time\n\t\tconfig = {\n\n\t\t\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t\t\t// when the presentation is scaled to fit different resolutions\n\t\t\twidth: 960,\n\t\t\theight: 700,\n\n\t\t\t// Factor of the display size that should remain empty around the content\n\t\t\tmargin: 0.04,\n\n\t\t\t// Bounds for smallest/largest possible scale to apply to content\n\t\t\tminScale: 0.2,\n\t\t\tmaxScale: 2.0,\n\n\t\t\t// Display controls in the bottom right corner\n\t\t\tcontrols: true,\n\n\t\t\t// Display a presentation progress bar\n\t\t\tprogress: true,\n\n\t\t\t// Display the page number of the current slide\n\t\t\tslideNumber: false,\n\n\t\t\t// Determine which displays to show the slide number on\n\t\t\tshowSlideNumber: 'all',\n\n\t\t\t// Push each slide change to the browser history\n\t\t\thistory: false,\n\n\t\t\t// Enable keyboard shortcuts for navigation\n\t\t\tkeyboard: true,\n\n\t\t\t// Optional function that blocks keyboard events when retuning false\n\t\t\tkeyboardCondition: null,\n\n\t\t\t// Enable the slide overview mode\n\t\t\toverview: true,\n\n\t\t\t// Vertical centering of slides\n\t\t\tcenter: true,\n\n\t\t\t// Enables touch navigation on devices with touch input\n\t\t\ttouch: true,\n\n\t\t\t// Loop the presentation\n\t\t\tloop: false,\n\n\t\t\t// Change the presentation direction to be RTL\n\t\t\trtl: false,\n\n\t\t\t// Randomizes the order of slides each time the presentation loads\n\t\t\tshuffle: false,\n\n\t\t\t// Turns fragments on and off globally\n\t\t\tfragments: true,\n\n\t\t\t// Flags if the presentation is running in an embedded mode,\n\t\t\t// i.e. contained within a limited portion of the screen\n\t\t\tembedded: false,\n\n\t\t\t// Flags if we should show a help overlay when the question-mark\n\t\t\t// key is pressed\n\t\t\thelp: true,\n\n\t\t\t// Flags if it should be possible to pause the presentation (blackout)\n\t\t\tpause: true,\n\n\t\t\t// Flags if speaker notes should be visible to all viewers\n\t\t\tshowNotes: false,\n\n\t\t\t// Global override for autolaying embedded media (video/audio/iframe)\n\t\t\t// - null: Media will only autoplay if data-autoplay is present\n\t\t\t// - true: All media will autoplay, regardless of individual setting\n\t\t\t// - false: No media will autoplay, regardless of individual setting\n\t\t\tautoPlayMedia: null,\n\n\t\t\t// Number of milliseconds between automatically proceeding to the\n\t\t\t// next slide, disabled when set to 0, this value can be overwritten\n\t\t\t// by using a data-autoslide attribute on your slides\n\t\t\tautoSlide: 0,\n\n\t\t\t// Stop auto-sliding after user input\n\t\t\tautoSlideStoppable: true,\n\n\t\t\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\t\t\tautoSlideMethod: null,\n\n\t\t\t// Enable slide navigation via mouse wheel\n\t\t\tmouseWheel: false,\n\n\t\t\t// Apply a 3D roll to links on hover\n\t\t\trollingLinks: false,\n\n\t\t\t// Hides the address bar on mobile devices\n\t\t\thideAddressBar: true,\n\n\t\t\t// Opens links in an iframe preview overlay\n\t\t\tpreviewLinks: false,\n\n\t\t\t// Exposes the reveal.js API through window.postMessage\n\t\t\tpostMessage: true,\n\n\t\t\t// Dispatches all reveal.js events to the parent window through postMessage\n\t\t\tpostMessageEvents: false,\n\n\t\t\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\t\t\tfocusBodyOnPageVisibilityChange: true,\n\n\t\t\t// Transition style\n\t\t\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t\t\t// Transition speed\n\t\t\ttransitionSpeed: 'default', // default/fast/slow\n\n\t\t\t// Transition style for full page slide backgrounds\n\t\t\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t\t\t// Parallax background image\n\t\t\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t\t\t// Parallax background size\n\t\t\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t\t\t// Amount of pixels to move the parallax background per slide step\n\t\t\tparallaxBackgroundHorizontal: null,\n\t\t\tparallaxBackgroundVertical: null,\n\n\t\t\t// The maximum number of pages a single slide can expand onto when printing\n\t\t\t// to PDF, unlimited by default\n\t\t\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t\t\t// Offset used to reduce the height of content within exported PDF pages.\n\t\t\t// This exists to account for environment differences based on how you\n\t\t\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t\t\t// on precisely the total height of the document whereas in-browser\n\t\t\t// printing has to end one pixel before.\n\t\t\tpdfPageHeightOffset: -1,\n\n\t\t\t// Number of slides away from the current that are visible\n\t\t\tviewDistance: 3,\n\n\t\t\t// The display mode that will be used to show slides\n\t\t\tdisplay: 'block',\n\n\t\t\t// Script dependencies to load\n\t\t\tdependencies: []\n\n\t\t},\n\n\t\t// Flags if Reveal.initialize() has been called\n\t\tinitialized = false,\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tloaded = false,\n\n\t\t// Flags if the overview mode is currently active\n\t\toverview = false,\n\n\t\t// Holds the dimensions of our overview slides, including margins\n\t\toverviewSlideWidth = null,\n\t\toverviewSlideHeight = null,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\tpreviousBackground,\n\n\t\t// Slides may hold a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Features supported by the browser, see #checkCapabilities()\n\t\tfeatures = {},\n\n\t\t// Client is a mobile device, see #checkCapabilities()\n\t\tisMobileDevice,\n\n\t\t// Client is a desktop Chrome, see #checkCapabilities()\n\t\tisChrome,\n\n\t\t// Throttles mouse wheel navigation\n\t\tlastMouseWheelStep = 0,\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\twriteURLTimeout = 0,\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Holds information about the currently ongoing touch input\n\t\ttouch = {\n\t\t\tstartX: 0,\n\t\t\tstartY: 0,\n\t\t\tstartSpan: 0,\n\t\t\tstartCount: 0,\n\t\t\tcaptured: false,\n\t\t\tthreshold: 40\n\t\t},\n\n\t\t// Holds information about the keyboard shortcuts\n\t\tkeyboardShortcuts = {\n\t\t\t'N  ,  SPACE':\t\t\t'Next slide',\n\t\t\t'P':\t\t\t\t\t'Previous slide',\n\t\t\t'&#8592;  ,  H':\t\t'Navigate left',\n\t\t\t'&#8594;  ,  L':\t\t'Navigate right',\n\t\t\t'&#8593;  ,  K':\t\t'Navigate up',\n\t\t\t'&#8595;  ,  J':\t\t'Navigate down',\n\t\t\t'Home':\t\t\t\t\t'First slide',\n\t\t\t'End':\t\t\t\t\t'Last slide',\n\t\t\t'B  ,  .':\t\t\t\t'Pause',\n\t\t\t'F':\t\t\t\t\t'Fullscreen',\n\t\t\t'ESC, O':\t\t\t\t'Slide overview'\n\t\t};\n\n\t/**\n\t * Starts up the presentation if the client is capable.\n\t */\n\tfunction initialize( options ) {\n\n\t\t// Make sure we only initialize once\n\t\tif( initialized === true ) return;\n\n\t\tinitialized = true;\n\n\t\tcheckCapabilities();\n\n\t\tif( !features.transforms2d && !features.transforms3d ) {\n\t\t\tdocument.body.setAttribute( 'class', 'no-transforms' );\n\n\t\t\t// Since JS won't be running any further, we load all lazy\n\t\t\t// loading elements upfront\n\t\t\tvar images = toArray( document.getElementsByTagName( 'img' ) ),\n\t\t\t\tiframes = toArray( document.getElementsByTagName( 'iframe' ) );\n\n\t\t\tvar lazyLoadable = images.concat( iframes );\n\n\t\t\tfor( var i = 0, len = lazyLoadable.length; i < len; i++ ) {\n\t\t\t\tvar element = lazyLoadable[i];\n\t\t\t\tif( element.getAttribute( 'data-src' ) ) {\n\t\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the browser doesn't support core features we won't be\n\t\t\t// using JavaScript to control the presentation\n\t\t\treturn;\n\t\t}\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = document.querySelector( '.reveal' );\n\t\tdom.slides = document.querySelector( '.reveal .slides' );\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\tvar query = Reveal.getQueryHash();\n\n\t\t// Do not accept new dependencies via query config to avoid\n\t\t// the potential of malicious script injection\n\t\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\t\t// Copy options over to our config object\n\t\textend( config, options );\n\t\textend( config, query );\n\n\t\t// Hide the address bar in mobile browsers\n\t\thideAddressBar();\n\n\t\t// Loads the dependencies and continues to #start() once done\n\t\tload();\n\n\t}\n\n\t/**\n\t * Inspect the client to see what it's capable of, this\n\t * should only happens once per runtime.\n\t */\n\tfunction checkCapabilities() {\n\n\t\tisMobileDevice = /(iphone|ipod|ipad|android)/gi.test( UA );\n\t\tisChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\n\t\tvar testElement = document.createElement( 'div' );\n\n\t\tfeatures.transforms3d = 'WebkitPerspective' in testElement.style ||\n\t\t\t\t\t\t\t\t'MozPerspective' in testElement.style ||\n\t\t\t\t\t\t\t\t'msPerspective' in testElement.style ||\n\t\t\t\t\t\t\t\t'OPerspective' in testElement.style ||\n\t\t\t\t\t\t\t\t'perspective' in testElement.style;\n\n\t\tfeatures.transforms2d = 'WebkitTransform' in testElement.style ||\n\t\t\t\t\t\t\t\t'MozTransform' in testElement.style ||\n\t\t\t\t\t\t\t\t'msTransform' in testElement.style ||\n\t\t\t\t\t\t\t\t'OTransform' in testElement.style ||\n\t\t\t\t\t\t\t\t'transform' in testElement.style;\n\n\t\tfeatures.requestAnimationFrameMethod = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n\t\tfeatures.requestAnimationFrame = typeof features.requestAnimationFrameMethod === 'function';\n\n\t\tfeatures.canvas = !!document.createElement( 'canvas' ).getContext;\n\n\t\t// Transitions in the overview are disabled in desktop and\n\t\t// Safari due to lag\n\t\tfeatures.overviewTransitions = !/Version\\/[\\d\\.]+.*Safari/.test( UA );\n\n\t\t// Flags if we should use zoom instead of transform to scale\n\t\t// up slides. Zoom produces crisper results but has a lot of\n\t\t// xbrowser quirks so we only use it in whitelsited browsers.\n\t\tfeatures.zoom = 'zoom' in testElement.style && !isMobileDevice &&\n\t\t\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );\n\n\t}\n\n    /**\n     * Loads the dependencies of reveal.js. Dependencies are\n     * defined via the configuration option 'dependencies'\n     * and will be loaded prior to starting/binding reveal.js.\n     * Some dependencies may have an 'async' flag, if so they\n     * will load after reveal.js has been started up.\n     */\n\tfunction load() {\n\n\t\tvar scripts = [],\n\t\t\tscriptsAsync = [],\n\t\t\tscriptsToPreload = 0;\n\n\t\t// Called once synchronous scripts finish loading\n\t\tfunction proceed() {\n\t\t\tif( scriptsAsync.length ) {\n\t\t\t\t// Load asynchronous scripts\n\t\t\t\thead.js.apply( null, scriptsAsync );\n\t\t\t}\n\n\t\t\tstart();\n\t\t}\n\n\t\tfunction loadScript( s ) {\n\t\t\thead.ready( s.src.match( /([\\w\\d_\\-]*)\\.?js$|[^\\\\\\/]*$/i )[0], function() {\n\t\t\t\t// Extension may contain callback functions\n\t\t\t\tif( typeof s.callback === 'function' ) {\n\t\t\t\t\ts.callback.apply( this );\n\t\t\t\t}\n\n\t\t\t\tif( --scriptsToPreload === 0 ) {\n\t\t\t\t\tproceed();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor( var i = 0, len = config.dependencies.length; i < len; i++ ) {\n\t\t\tvar s = config.dependencies[i];\n\n\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\tif( s.async ) {\n\t\t\t\t\tscriptsAsync.push( s.src );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tscripts.push( s.src );\n\t\t\t\t}\n\n\t\t\t\tloadScript( s );\n\t\t\t}\n\t\t}\n\n\t\tif( scripts.length ) {\n\t\t\tscriptsToPreload = scripts.length;\n\n\t\t\t// Load synchronous scripts\n\t\t\thead.js.apply( null, scripts );\n\t\t}\n\t\telse {\n\t\t\tproceed();\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\treadURL();\n\n\t\t// Update all backgrounds\n\t\tupdateBackground( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( function() {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tloaded = true;\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent( 'ready', {\n\t\t\t\t'indexh': indexh,\n\t\t\t\t'indexv': indexv,\n\t\t\t\t'currentSlide': currentSlide\n\t\t\t} );\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tsetupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', setupPDF );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\t// Background element\n\t\tdom.background = createSingletonNode( dom.wrapper, 'div', 'backgrounds', null );\n\n\t\t// Progress bar\n\t\tdom.progress = createSingletonNode( dom.wrapper, 'div', 'progress', '<span></span>' );\n\t\tdom.progressbar = dom.progress.querySelector( 'span' );\n\n\t\t// Arrow controls\n\t\tcreateSingletonNode( dom.wrapper, 'aside', 'controls',\n\t\t\t'<button class=\"navigate-left\" aria-label=\"previous slide\"></button>' +\n\t\t\t'<button class=\"navigate-right\" aria-label=\"next slide\"></button>' +\n\t\t\t'<button class=\"navigate-up\" aria-label=\"above slide\"></button>' +\n\t\t\t'<button class=\"navigate-down\" aria-label=\"below slide\"></button>' );\n\n\t\t// Slide number\n\t\tdom.slideNumber = createSingletonNode( dom.wrapper, 'div', 'slide-number', '' );\n\n\t\t// Element containing notes that are visible to the audience\n\t\tdom.speakerNotes = createSingletonNode( dom.wrapper, 'div', 'speaker-notes', null );\n\t\tdom.speakerNotes.setAttribute( 'data-prevent-swipe', '' );\n\t\tdom.speakerNotes.setAttribute( 'tabindex', '0' );\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tcreateSingletonNode( dom.wrapper, 'div', 'pause-overlay', null );\n\n\t\t// Cache references to elements\n\t\tdom.controls = document.querySelector( '.reveal .controls' );\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tdom.controlsLeft = toArray( document.querySelectorAll( '.navigate-left' ) );\n\t\tdom.controlsRight = toArray( document.querySelectorAll( '.navigate-right' ) );\n\t\tdom.controlsUp = toArray( document.querySelectorAll( '.navigate-up' ) );\n\t\tdom.controlsDown = toArray( document.querySelectorAll( '.navigate-down' ) );\n\t\tdom.controlsPrev = toArray( document.querySelectorAll( '.navigate-prev' ) );\n\t\tdom.controlsNext = toArray( document.querySelectorAll( '.navigate-next' ) );\n\n\t\tdom.statusDiv = createStatusDiv();\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusDiv() {\n\n\t\tvar statusDiv = document.getElementById( 'aria-status-div' );\n\t\tif( !statusDiv ) {\n\t\t\tstatusDiv = document.createElement( 'div' );\n\t\t\tstatusDiv.style.position = 'absolute';\n\t\t\tstatusDiv.style.height = '1px';\n\t\t\tstatusDiv.style.width = '1px';\n\t\t\tstatusDiv.style.overflow = 'hidden';\n\t\t\tstatusDiv.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusDiv.setAttribute( 'id', 'aria-status-div' );\n\t\t\tstatusDiv.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusDiv.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusDiv );\n\t\t}\n\t\treturn statusDiv;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tvar text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tvar isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tvar isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\ttoArray( node.childNodes ).forEach( function( child ) {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn text;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tfunction setupPDF() {\n\n\t\tvar slideSize = getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tvar pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tvar slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\t// Let the browser know what page size we want to print\n\t\tinjectStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tinjectStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.body.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\t// Make sure stretch elements fit on slide\n\t\tlayoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Add each slide's index as attributes on itself, we need these\n\t\t// indices to generate slide numbers below\n\t\ttoArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ).forEach( function( hslide, h ) {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\t\t\t\ttoArray( hslide.querySelectorAll( 'section' ) ).forEach( function( vslide, v ) {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Slide and slide background layout\n\t\ttoArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( function( slide ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tvar left = ( pageWidth - slideWidth ) / 2,\n\t\t\t\t\ttop = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tvar contentHeight = slide.scrollHeight;\n\t\t\t\tvar numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tvar page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\t\t\t\tslide.parentNode.insertBefore( page, slide );\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tvar notes = getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tvar notesSpacing = 8;\n\t\t\t\t\t\tvar notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tvar notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpage.parentNode.insertBefore( notesElement, page.nextSibling );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\n\t\t\t\tif( config.slideNumber && /all|print/i.test( config.showSlideNumber ) ) {\n\t\t\t\t\tvar slideNumberH = parseInt( slide.getAttribute( 'data-index-h' ), 10 ) + 1,\n\t\t\t\t\t\tslideNumberV = parseInt( slide.getAttribute( 'data-index-v' ), 10 ) + 1;\n\n\t\t\t\t\tvar numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = formatSlideNumber( slideNumberH, '.', slideNumberV );\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\t\t// Show all fragments\n\t\ttoArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR + ' .fragment' ) ).forEach( function( fragment ) {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t} );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tdispatchEvent( 'pdf-ready' );\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( function() {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * Creates an HTML element and returns a reference to it.\n\t * If the element already exists the existing instance will\n\t * be returned.\n\t *\n\t * @param {HTMLElement} container\n\t * @param {string} tagname\n\t * @param {string} classname\n\t * @param {string} innerHTML\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createSingletonNode( container, tagname, classname, innerHTML ) {\n\n\t\t// Find all nodes matching the description\n\t\tvar nodes = container.querySelectorAll( '.' + classname );\n\n\t\t// Check all matches to find one which is a direct child of\n\t\t// the specified container\n\t\tfor( var i = 0; i < nodes.length; i++ ) {\n\t\t\tvar testNode = nodes[i];\n\t\t\tif( testNode.parentNode === container ) {\n\t\t\t\treturn testNode;\n\t\t\t}\n\t\t}\n\n\t\t// If no node was found, create it now\n\t\tvar node = document.createElement( tagname );\n\t\tnode.classList.add( classname );\n\t\tif( typeof innerHTML === 'string' ) {\n\t\t\tnode.innerHTML = innerHTML;\n\t\t}\n\t\tcontainer.appendChild( node );\n\n\t\treturn node;\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tfunction createBackgrounds() {\n\n\t\tvar printMode = isPrintingPDF();\n\n\t\t// Clear prior backgrounds\n\t\tdom.background.innerHTML = '';\n\t\tdom.background.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\ttoArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ).forEach( function( slideh ) {\n\n\t\t\tvar backgroundStack = createBackground( slideh, dom.background );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\ttoArray( slideh.querySelectorAll( 'section' ) ).forEach( function( slidev ) {\n\n\t\t\t\tcreateBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( config.parallaxBackgroundImage ) {\n\n\t\t\tdom.background.style.backgroundImage = 'url(\"' + config.parallaxBackgroundImage + '\")';\n\t\t\tdom.background.style.backgroundSize = config.parallaxBackgroundSize;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( function() {\n\t\t\t\tdom.wrapper.classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tdom.background.style.backgroundImage = '';\n\t\t\tdom.wrapper.classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tfunction createBackground( slide, container ) {\n\n\t\tvar data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' )\n\t\t};\n\n\t\tvar element = document.createElement( 'div' );\n\n\t\t// Carry over custom classes from the slide to the background\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundRepeat ) element.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) element.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tcontainer.appendChild( element );\n\n\t\t// If backgrounds are being recreated, clear old classes\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\tslide.slideBackgroundElement = element;\n\n\t\t// If this slide has a background color, add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be set\n\t\tvar computedBackgroundStyle = window.getComputedStyle( element );\n\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\tvar rgb = colorToRgb( computedBackgroundStyle.backgroundColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( computedBackgroundStyle.backgroundColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', function ( event ) {\n\t\t\t\tvar data = event.data;\n\n\t\t\t\t// Make sure we're dealing with JSON\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\t\t\tdata = JSON.parse( data );\n\n\t\t\t\t\t// Check if the requested method can be found\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\t\t\t\t\t\tReveal[data.method].apply( Reveal, data.args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tvar numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\tdom.wrapper.classList.remove( config.transition );\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) extend( config, options );\n\n\t\t// Force linear transition based on browser capabilities\n\t\tif( features.transforms3d === false ) config.transition = 'linear';\n\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\tdom.controls.style.display = config.controls ? 'block' : 'none';\n\t\tdom.progress.style.display = config.progress ? 'block' : 'none';\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tif( config.rtl ) {\n\t\t\tdom.wrapper.classList.add( 'rtl' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'rtl' );\n\t\t}\n\n\t\tif( config.center ) {\n\t\t\tdom.wrapper.classList.add( 'center' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'center' );\n\t\t}\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\tif( config.showNotes ) {\n\t\t\tdom.speakerNotes.classList.add( 'visible' );\n\t\t\tdom.speakerNotes.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\t\telse {\n\t\t\tdom.speakerNotes.classList.remove( 'visible' );\n\t\t}\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Rolling 3D links\n\t\tif( config.rollingLinks ) {\n\t\t\tenableRollingLinks();\n\t\t}\n\t\telse {\n\t\t\tdisableRollingLinks();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable && features.canvas && features.requestAnimationFrame ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, function() {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// When fragments are turned off they should be visible\n\t\tif( config.fragments === false ) {\n\t\t\ttoArray( dom.slides.querySelectorAll( '.fragment' ) ).forEach( function( element ) {\n\t\t\t\telement.classList.add( 'visible' );\n\t\t\t\telement.classList.remove( 'current-fragment' );\n\t\t\t} );\n\t\t}\n\n\t\t// Slide numbers\n\t\tvar slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tdom.slideNumber.style.display = slideNumberDisplay;\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'hashchange', onWindowHashChange, false );\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) {\n\t\t\tdom.wrapper.addEventListener( 'touchstart', onTouchStart, false );\n\t\t\tdom.wrapper.addEventListener( 'touchmove', onTouchMove, false );\n\t\t\tdom.wrapper.addEventListener( 'touchend', onTouchEnd, false );\n\n\t\t\t// Support pointer-style touch interaction as well\n\t\t\tif( window.navigator.pointerEnabled ) {\n\t\t\t\t// IE 11 uses un-prefixed version of pointer events\n\t\t\t\tdom.wrapper.addEventListener( 'pointerdown', onPointerDown, false );\n\t\t\t\tdom.wrapper.addEventListener( 'pointermove', onPointerMove, false );\n\t\t\t\tdom.wrapper.addEventListener( 'pointerup', onPointerUp, false );\n\t\t\t}\n\t\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\t\tdom.wrapper.addEventListener( 'MSPointerDown', onPointerDown, false );\n\t\t\t\tdom.wrapper.addEventListener( 'MSPointerMove', onPointerMove, false );\n\t\t\t\tdom.wrapper.addEventListener( 'MSPointerUp', onPointerUp, false );\n\t\t\t}\n\t\t}\n\n\t\tif( config.keyboard ) {\n\t\t\tdocument.addEventListener( 'keydown', onDocumentKeyDown, false );\n\t\t\tdocument.addEventListener( 'keypress', onDocumentKeyPress, false );\n\t\t}\n\n\t\tif( config.progress && dom.progress ) {\n\t\t\tdom.progress.addEventListener( 'click', onProgressClicked, false );\n\t\t}\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tvar visibilityChange;\n\n\t\t\tif( 'hidden' in document ) {\n\t\t\t\tvisibilityChange = 'visibilitychange';\n\t\t\t}\n\t\t\telse if( 'msHidden' in document ) {\n\t\t\t\tvisibilityChange = 'msvisibilitychange';\n\t\t\t}\n\t\t\telse if( 'webkitHidden' in document ) {\n\t\t\t\tvisibilityChange = 'webkitvisibilitychange';\n\t\t\t}\n\n\t\t\tif( visibilityChange ) {\n\t\t\t\tdocument.addEventListener( visibilityChange, onPageVisibilityChange, false );\n\t\t\t}\n\t\t}\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tvar pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( UA.match( /android/gi ) ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( function( eventName ) {\n\t\t\tdom.controlsLeft.forEach( function( el ) { el.addEventListener( eventName, onNavigateLeftClicked, false ); } );\n\t\t\tdom.controlsRight.forEach( function( el ) { el.addEventListener( eventName, onNavigateRightClicked, false ); } );\n\t\t\tdom.controlsUp.forEach( function( el ) { el.addEventListener( eventName, onNavigateUpClicked, false ); } );\n\t\t\tdom.controlsDown.forEach( function( el ) { el.addEventListener( eventName, onNavigateDownClicked, false ); } );\n\t\t\tdom.controlsPrev.forEach( function( el ) { el.addEventListener( eventName, onNavigatePrevClicked, false ); } );\n\t\t\tdom.controlsNext.forEach( function( el ) { el.addEventListener( eventName, onNavigateNextClicked, false ); } );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\tdocument.removeEventListener( 'keydown', onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', onDocumentKeyPress, false );\n\t\twindow.removeEventListener( 'hashchange', onWindowHashChange, false );\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.wrapper.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tdom.wrapper.removeEventListener( 'touchmove', onTouchMove, false );\n\t\tdom.wrapper.removeEventListener( 'touchend', onTouchEnd, false );\n\n\t\t// IE11\n\t\tif( window.navigator.pointerEnabled ) {\n\t\t\tdom.wrapper.removeEventListener( 'pointerdown', onPointerDown, false );\n\t\t\tdom.wrapper.removeEventListener( 'pointermove', onPointerMove, false );\n\t\t\tdom.wrapper.removeEventListener( 'pointerup', onPointerUp, false );\n\t\t}\n\t\t// IE10\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\tdom.wrapper.removeEventListener( 'MSPointerDown', onPointerDown, false );\n\t\t\tdom.wrapper.removeEventListener( 'MSPointerMove', onPointerMove, false );\n\t\t\tdom.wrapper.removeEventListener( 'MSPointerUp', onPointerUp, false );\n\t\t}\n\n\t\tif ( config.progress && dom.progress ) {\n\t\t\tdom.progress.removeEventListener( 'click', onProgressClicked, false );\n\t\t}\n\n\t\t[ 'touchstart', 'click' ].forEach( function( eventName ) {\n\t\t\tdom.controlsLeft.forEach( function( el ) { el.removeEventListener( eventName, onNavigateLeftClicked, false ); } );\n\t\t\tdom.controlsRight.forEach( function( el ) { el.removeEventListener( eventName, onNavigateRightClicked, false ); } );\n\t\t\tdom.controlsUp.forEach( function( el ) { el.removeEventListener( eventName, onNavigateUpClicked, false ); } );\n\t\t\tdom.controlsDown.forEach( function( el ) { el.removeEventListener( eventName, onNavigateDownClicked, false ); } );\n\t\t\tdom.controlsPrev.forEach( function( el ) { el.removeEventListener( eventName, onNavigatePrevClicked, false ); } );\n\t\t\tdom.controlsNext.forEach( function( el ) { el.removeEventListener( eventName, onNavigateNextClicked, false ); } );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Extend object a with the properties of object b.\n\t * If there's a conflict, object b takes precedence.\n\t *\n\t * @param {object} a\n\t * @param {object} b\n\t */\n\tfunction extend( a, b ) {\n\n\t\tfor( var i in b ) {\n\t\t\ta[ i ] = b[ i ];\n\t\t}\n\n\t}\n\n\t/**\n\t * Converts the target object to an array.\n\t *\n\t * @param {object} o\n\t * @return {object[]}\n\t */\n\tfunction toArray( o ) {\n\n\t\treturn Array.prototype.slice.call( o );\n\n\t}\n\n\t/**\n\t * Utility for deserializing a value.\n\t *\n\t * @param {*} value\n\t * @return {*}\n\t */\n\tfunction deserialize( value ) {\n\n\t\tif( typeof value === 'string' ) {\n\t\t\tif( value === 'null' ) return null;\n\t\t\telse if( value === 'true' ) return true;\n\t\t\telse if( value === 'false' ) return false;\n\t\t\telse if( value.match( /^[\\d\\.]+$/ ) ) return parseFloat( value );\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\t/**\n\t * Measures the distance in pixels between point a\n\t * and point b.\n\t *\n\t * @param {object} a point with x/y properties\n\t * @param {object} b point with x/y properties\n\t *\n\t * @return {number}\n\t */\n\tfunction distanceBetween( a, b ) {\n\n\t\tvar dx = a.x - b.x,\n\t\t\tdy = a.y - b.y;\n\n\t\treturn Math.sqrt( dx*dx + dy*dy );\n\n\t}\n\n\t/**\n\t * Applies a CSS transform to the target element.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} transform\n\t */\n\tfunction transformElement( element, transform ) {\n\n\t\telement.style.WebkitTransform = transform;\n\t\telement.style.MozTransform = transform;\n\t\telement.style.msTransform = transform;\n\t\telement.style.transform = transform;\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\ttransformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\ttransformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Injects the given CSS styles into the DOM.\n\t *\n\t * @param {string} value\n\t */\n\tfunction injectStyleSheet( value ) {\n\n\t\tvar tag = document.createElement( 'style' );\n\t\ttag.type = 'text/css';\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t\tdocument.getElementsByTagName( 'head' )[0].appendChild( tag );\n\n\t}\n\n\t/**\n\t * Find the closest parent that matches the given\n\t * selector.\n\t *\n\t * @param {HTMLElement} target The child element\n\t * @param {String} selector The CSS selector to match\n\t * the parents against\n\t *\n\t * @return {HTMLElement} The matched parent or null\n\t * if no matching parent was found\n\t */\n\tfunction closestParent( target, selector ) {\n\n\t\tvar parent = target.parentNode;\n\n\t\twhile( parent ) {\n\n\t\t\t// There's some overhead doing this each time, we don't\n\t\t\t// want to rewrite the element prototype but should still\n\t\t\t// be enough to feature detect once at startup...\n\t\t\tvar matchesMethod = parent.matches || parent.matchesSelector || parent.msMatchesSelector;\n\n\t\t\t// If we find a match, we're all set\n\t\t\tif( matchesMethod && matchesMethod.call( parent, selector ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\t// Keep searching\n\t\t\tparent = parent.parentNode;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Converts various color input formats to an {r:0,g:0,b:0} object.\n\t *\n\t * @param {string} color The string representation of a color\n\t * @example\n\t * colorToRgb('#000');\n\t * @example\n\t * colorToRgb('#000000');\n\t * @example\n\t * colorToRgb('rgb(0,0,0)');\n\t * @example\n\t * colorToRgb('rgba(0,0,0)');\n\t *\n\t * @return {{r: number, g: number, b: number, [a]: number}|null}\n\t */\n\tfunction colorToRgb( color ) {\n\n\t\tvar hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\t\tif( hex3 && hex3[1] ) {\n\t\t\thex3 = hex3[1];\n\t\t\treturn {\n\t\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t\t};\n\t\t}\n\n\t\tvar hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\t\tif( hex6 && hex6[1] ) {\n\t\t\thex6 = hex6[1];\n\t\t\treturn {\n\t\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\n\t\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\n\t\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\n\t\t\t};\n\t\t}\n\n\t\tvar rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\t\tif( rgb ) {\n\t\t\treturn {\n\t\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\t\tb: parseInt( rgb[3], 10 )\n\t\t\t};\n\t\t}\n\n\t\tvar rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\t\tif( rgba ) {\n\t\t\treturn {\n\t\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\t\ta: parseFloat( rgba[4] )\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Calculates brightness on a scale of 0-255.\n\t *\n\t * @param {string} color See colorToRgb for supported formats.\n\t * @see {@link colorToRgb}\n\t */\n\tfunction colorBrightness( color ) {\n\n\t\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\t\tif( color ) {\n\t\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Returns the remaining height within the parent of the\n\t * target element.\n\t *\n\t * remaining height = [ configured parent height ] - [ current parent height ]\n\t *\n\t * @param {HTMLElement} element\n\t * @param {number} [height]\n\t */\n\tfunction getRemainingHeight( element, height ) {\n\n\t\theight = height || 0;\n\n\t\tif( element ) {\n\t\t\tvar newHeight, oldHeight = element.style.height;\n\n\t\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t\t// the other elements\n\t\t\telement.style.height = '0px';\n\t\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t\t// Restore the old height, just in case\n\t\t\telement.style.height = oldHeight + 'px';\n\n\t\t\treturn newHeight;\n\t\t}\n\n\t\treturn height;\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tfunction isPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n\t/**\n\t * Hides the address bar if we're on a mobile device.\n\t */\n\tfunction hideAddressBar() {\n\n\t\tif( config.hideAddressBar && isMobileDevice ) {\n\t\t\t// Events that should trigger the address bar to hide\n\t\t\twindow.addEventListener( 'load', removeAddressBar, false );\n\t\t\twindow.addEventListener( 'orientationchange', removeAddressBar, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Causes the address bar to hide on mobile devices,\n\t * more vertical space ftw.\n\t */\n\tfunction removeAddressBar() {\n\n\t\tsetTimeout( function() {\n\t\t\twindow.scrollTo( 0, 1 );\n\t\t}, 10 );\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent( type, args ) {\n\n\t\tvar event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, true, true );\n\t\textend( event, args );\n\t\tdom.wrapper.dispatchEvent( event );\n\n\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t// parent window. Used by the notes plugin\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\twindow.parent.postMessage( JSON.stringify({ namespace: 'reveal', eventName: type, state: getState() }), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Wrap all links in 3D goodness.\n\t */\n\tfunction enableRollingLinks() {\n\n\t\tif( features.transforms3d && !( 'msPerspective' in document.body.style ) ) {\n\t\t\tvar anchors = dom.wrapper.querySelectorAll( SLIDES_SELECTOR + ' a' );\n\n\t\t\tfor( var i = 0, len = anchors.length; i < len; i++ ) {\n\t\t\t\tvar anchor = anchors[i];\n\n\t\t\t\tif( anchor.textContent && !anchor.querySelector( '*' ) && ( !anchor.className || !anchor.classList.contains( anchor, 'roll' ) ) ) {\n\t\t\t\t\tvar span = document.createElement('span');\n\t\t\t\t\tspan.setAttribute('data-title', anchor.text);\n\t\t\t\t\tspan.innerHTML = anchor.innerHTML;\n\n\t\t\t\t\tanchor.classList.add( 'roll' );\n\t\t\t\t\tanchor.innerHTML = '';\n\t\t\t\t\tanchor.appendChild(span);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Unwrap all 3D links.\n\t */\n\tfunction disableRollingLinks() {\n\n\t\tvar anchors = dom.wrapper.querySelectorAll( SLIDES_SELECTOR + ' a.roll' );\n\n\t\tfor( var i = 0, len = anchors.length; i < len; i++ ) {\n\t\t\tvar anchor = anchors[i];\n\t\t\tvar span = anchor.querySelector( 'span' );\n\n\t\t\tif( span ) {\n\t\t\t\tanchor.classList.remove( 'roll' );\n\t\t\t\tanchor.innerHTML = span.innerHTML;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector ) {\n\n\t\tvar anchors = toArray( document.querySelectorAll( selector ? selector : 'a' ) );\n\n\t\tanchors.forEach( function( element ) {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector ) {\n\n\t\tvar anchors = toArray( document.querySelectorAll( selector ? selector : 'a' ) );\n\n\t\tanchors.forEach( function( element ) {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML = [\n\t\t\t'<header>',\n\t\t\t\t'<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>',\n\t\t\t\t'<a class=\"external\" href=\"'+ url +'\" target=\"_blank\"><span class=\"icon\"></span></a>',\n\t\t\t'</header>',\n\t\t\t'<div class=\"spinner\"></div>',\n\t\t\t'<div class=\"viewport\">',\n\t\t\t\t'<iframe src=\"'+ url +'\"></iframe>',\n\t\t\t\t'<small class=\"viewport-inner\">',\n\t\t\t\t\t'<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site\\'s policy (x-frame-options).</span>',\n\t\t\t\t'</small>',\n\t\t\t'</div>'\n\t\t].join('');\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', function( event ) {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', function( event ) {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', function( event ) {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t\tsetTimeout( function() {\n\t\t\tdom.overlay.classList.add( 'visible' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tvar html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( var key in keyboardShortcuts ) {\n\t\t\t\thtml += '<tr><td>' + key + '</td><td>' + keyboardShortcuts[ key ] + '</td></tr>';\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = [\n\t\t\t\t'<header>',\n\t\t\t\t\t'<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>',\n\t\t\t\t'</header>',\n\t\t\t\t'<div class=\"viewport\">',\n\t\t\t\t\t'<div class=\"viewport-inner\">'+ html +'</div>',\n\t\t\t\t'</div>'\n\t\t\t].join('');\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', function( event ) {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t\tsetTimeout( function() {\n\t\t\t\tdom.overlay.classList.add( 'visible' );\n\t\t\t}, 1 );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !isPrintingPDF() ) {\n\n\t\t\tvar size = getComputedSlideSize();\n\n\t\t\t// Layout the contents of the slides\n\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t// Determine scale of content to fit within available space\n\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t// Respect max/min scale settings\n\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\tif( scale === 1 ) {\n\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\tdom.slides.style.left = '';\n\t\t\t\tdom.slides.style.top = '';\n\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\tdom.slides.style.right = '';\n\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Prefer zoom for scaling up so that content remains crisp.\n\t\t\t\t// Don't use zoom to scale down since that can lead to shifts\n\t\t\t\t// in text layout/line breaks.\n\t\t\t\tif( scale > 1 && features.zoom ) {\n\t\t\t\t\tdom.slides.style.zoom = scale;\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\t// Apply scale transform as a fallback\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Select all slides, vertical and horizontal\n\t\t\tvar slides = toArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\tfor( var i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\tvar slide = slides[ i ];\n\n\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t// children will be\n\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.style.top = '';\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tupdateProgress();\n\t\t\tupdateParallax();\n\n\t\t\tif( isOverview() ) {\n\t\t\t\tupdateOverview();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'stretch' class\n\t\ttoArray( dom.slides.querySelectorAll( 'section > .stretch' ) ).forEach( function( element ) {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tvar remainingHeight = getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tvar nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\tnh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tvar es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tvar size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tvar attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tfunction activateOverview() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( config.overview && !isOverview() ) {\n\n\t\t\toverview = true;\n\n\t\t\tdom.wrapper.classList.add( 'overview' );\n\t\t\tdom.wrapper.classList.remove( 'overview-deactivating' );\n\n\t\t\tif( features.overviewTransitions ) {\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\tdom.wrapper.classList.add( 'overview-animated' );\n\t\t\t\t}, 1 );\n\t\t\t}\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tcancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tdom.slides.appendChild( dom.background );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\ttoArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( function( slide ) {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', onOverviewSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tvar margin = 70;\n\t\t\tvar slideSize = getComputedSlideSize();\n\t\t\toverviewSlideWidth = slideSize.width + margin;\n\t\t\toverviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( config.rtl ) {\n\t\t\t\toverviewSlideWidth = -overviewSlideWidth;\n\t\t\t}\n\n\t\t\tupdateSlidesVisibility();\n\t\t\tlayoutOverview();\n\t\t\tupdateOverview();\n\n\t\t\tlayout();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tdispatchEvent( 'overviewshown', {\n\t\t\t\t'indexh': indexh,\n\t\t\t\t'indexv': indexv,\n\t\t\t\t'currentSlide': currentSlide\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tfunction layoutOverview() {\n\n\t\t// Layout slides\n\t\ttoArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ).forEach( function( hslide, h ) {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\ttoArray( hslide.querySelectorAll( 'section' ) ).forEach( function( vslide, v ) {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\ttoArray( dom.background.childNodes ).forEach( function( hbackground, h ) {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\ttoArray( hbackground.querySelectorAll( '.slide-background' ) ).forEach( function( vbackground, v ) {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tfunction updateOverview() {\n\n\t\tvar vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tvar scale = Math.max( vmin / 5, 150 ) / vmin;\n\n\t\ttransformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indexh * overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indexv * overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tfunction deactivateOverview() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( config.overview ) {\n\n\t\t\toverview = false;\n\n\t\t\tdom.wrapper.classList.remove( 'overview' );\n\t\t\tdom.wrapper.classList.remove( 'overview-animated' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tdom.wrapper.classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( function () {\n\t\t\t\tdom.wrapper.classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tdom.wrapper.appendChild( dom.background );\n\n\t\t\t// Clean up changes made to slides\n\t\t\ttoArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( function( slide ) {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', onOverviewSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\ttoArray( dom.background.querySelectorAll( '.slide-background' ) ).forEach( function( background ) {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\ttransformSlides( { overview: '' } );\n\n\t\t\tslide( indexh, indexv );\n\n\t\t\tlayout();\n\n\t\t\tcueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tdispatchEvent( 'overviewhidden', {\n\t\t\t\t'indexh': indexh,\n\t\t\t\t'indexv': indexv,\n\t\t\t\t'currentSlide': currentSlide\n\t\t\t} );\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\tfunction toggleOverview( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? activateOverview() : deactivateOverview();\n\t\t}\n\t\telse {\n\t\t\tisOverview() ? deactivateOverview() : activateOverview();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tfunction isOverview() {\n\n\t\treturn overview;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide ) {\n\n\t\t// Prefer slide argument, otherwise use current slide\n\t\tslide = slide ? slide : currentSlide;\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Handling the fullscreen functionality via the fullscreen API\n\t *\n\t * @see http://fullscreen.spec.whatwg.org/\n\t * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n\t */\n\tfunction enterFullscreen() {\n\n\t\tvar element = document.documentElement;\n\n\t\t// Check which implementation is available\n\t\tvar requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\t\telement.msRequestFullscreen;\n\n\t\tif( requestMethod ) {\n\t\t\trequestMethod.apply( element );\n\t\t}\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tvar wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent( 'paused' );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tvar wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent( 'resumed' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [o] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, o ) {\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tvar horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !isOverview() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tvar stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tvar indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Apply the new state\n\t\tstateLoop: for( var i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( var j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdocument.documentElement.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent( state[i] );\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdocument.documentElement.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\t// Update the overview if it's currently active\n\t\tif( isOverview() ) {\n\t\t\tupdateOverview();\n\t\t}\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tvar currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tnavigateFragment( f );\n\t\t}\n\n\t\t// Dispatch an event if the slide changed\n\t\tvar slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent( 'slidechanged', {\n\t\t\t\t'indexh': indexh,\n\t\t\t\t'indexv': indexv,\n\t\t\t\t'previousSlide': previousSlide,\n\t\t\t\t'currentSlide': currentSlide,\n\t\t\t\t'origin': o\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t// Ensure that the previous slide is never the same as the current\n\t\t\tpreviousSlide = null;\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\t// Issue: #285\n\t\t\tif ( dom.wrapper.querySelector( HOME_SLIDE_SELECTOR ).classList.contains( 'present' ) ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\tvar slides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR + '.stack') ), i;\n\t\t\t\t\tfor( i in slides ) {\n\t\t\t\t\t\tif( slides[i] ) {\n\t\t\t\t\t\t\t// Reset stack\n\t\t\t\t\t\t\tsetPreviousVerticalIndex( slides[i], 0 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tstopEmbeddedContent( previousSlide );\n\t\t\tstartEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents, for screen readers\n\t\tdom.statusDiv.textContent = getStatusText( currentSlide );\n\n\t\tupdateControls();\n\t\tupdateProgress();\n\t\tupdateBackground();\n\t\tupdateParallax();\n\t\tupdateSlideNumber();\n\t\tupdateNotes();\n\n\t\t// Update the URL hash\n\t\twriteURL();\n\n\t\tcueAutoSlide();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create the slide backgrounds\n\t\tcreateBackgrounds();\n\n\t\t// Write the current hash to the URL\n\t\twriteURL();\n\n\t\tsortAllFragments();\n\n\t\tupdateControls();\n\t\tupdateProgress();\n\t\tupdateSlideNumber();\n\t\tupdateSlidesVisibility();\n\t\tupdateBackground( true );\n\t\tupdateNotes();\n\n\t\tformatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tstopEmbeddedContent( currentSlide );\n\t\t}\n\t\telse {\n\t\t\tstartEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( isOverview() ) {\n\t\t\tlayoutOverview();\n\t\t}\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\t\thorizontalSlides.forEach( function( horizontalSlide ) {\n\n\t\t\tvar verticalSlides = toArray( horizontalSlide.querySelectorAll( 'section' ) );\n\t\t\tverticalSlides.forEach( function( verticalSlide, y ) {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tfunction sortAllFragments() {\n\n\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\t\thorizontalSlides.forEach( function( horizontalSlide ) {\n\n\t\t\tvar verticalSlides = toArray( horizontalSlide.querySelectorAll( 'section' ) );\n\t\t\tverticalSlides.forEach( function( verticalSlide, y ) {\n\n\t\t\t\tsortFragments( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t} );\n\n\t\t\tif( verticalSlides.length === 0 ) sortFragments( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle() {\n\n\t\tvar slides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\n\t\tslides.forEach( function( slide ) {\n\n\t\t\t// Insert this slide next to another random slide. This may\n\t\t\t// cause the slide to insert before itself but that's fine.\n\t\t\tdom.slides.insertBefore( slide, slides[ Math.floor( Math.random() * slides.length ) ] );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tvar slides = toArray( dom.wrapper.querySelectorAll( selector ) ),\n\t\t\tslidesLength = slides.length;\n\n\t\tvar printMode = isPrintingPDF();\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( var i = 0; i < slidesLength; i++ ) {\n\t\t\t\tvar element = slides[i];\n\n\t\t\t\tvar reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\tvar pastFragments = toArray( element.querySelectorAll( '.fragment' ) );\n\n\t\t\t\t\t\t// Show all fragments on prior slides\n\t\t\t\t\t\twhile( pastFragments.length ) {\n\t\t\t\t\t\t\tvar pastFragment = pastFragments.pop();\n\t\t\t\t\t\t\tpastFragment.classList.add( 'visible' );\n\t\t\t\t\t\t\tpastFragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\tvar futureFragments = toArray( element.querySelectorAll( '.fragment.visible' ) );\n\n\t\t\t\t\t\t// No fragments in future slides should be visible ahead of time\n\t\t\t\t\t\twhile( futureFragments.length ) {\n\t\t\t\t\t\t\tvar futureFragment = futureFragments.pop();\n\t\t\t\t\t\t\tfutureFragment.classList.remove( 'visible' );\n\t\t\t\t\t\t\tfutureFragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Mark the current slide as present\n\t\t\tslides[index].classList.add( 'present' );\n\t\t\tslides[index].removeAttribute( 'hidden' );\n\t\t\tslides[index].removeAttribute( 'aria-hidden' );\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tvar slideState = slides[index].getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tvar viewDistance = isOverview() ? 10 : config.viewDistance;\n\n\t\t\t// Limit view distance on weaker devices\n\t\t\tif( isMobileDevice ) {\n\t\t\t\tviewDistance = isOverview() ? 6 : 2;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( var x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tvar horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tvar verticalSlides = toArray( horizontalSlide.querySelectorAll( 'section' ) ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tshowSlide( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thideSlide( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tvar oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( var y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tvar verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tshowSlide( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\thideSlide( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tfunction updateNotes() {\n\n\t\tif( config.showNotes && dom.speakerNotes && currentSlide && !isPrintingPDF() ) {\n\n\t\t\tdom.speakerNotes.innerHTML = getSlideNotes() || '';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tfunction updateProgress() {\n\n\t\t// Update progress if enabled\n\t\tif( config.progress && dom.progressbar ) {\n\n\t\t\tdom.progressbar.style.width = getProgress() * dom.wrapper.offsetWidth + 'px';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the slide number div to reflect the current slide.\n\t *\n\t * The following slide number formats are available:\n\t *  \"h.v\":\thorizontal . vertical slide number (default)\n\t *  \"h/v\":\thorizontal / vertical slide number\n\t *    \"c\":\tflattened slide number\n\t *  \"c/t\":\tflattened slide number / total slides\n\t */\n\tfunction updateSlideNumber() {\n\n\t\t// Update slide number if enabled\n\t\tif( config.slideNumber && dom.slideNumber ) {\n\n\t\t\tvar value = [];\n\t\t\tvar format = 'h.v';\n\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( getSlidePastCount() + 1 );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( getSlidePastCount() + 1, '/', getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'h/v':\n\t\t\t\t\tvalue.push( indexh + 1 );\n\t\t\t\t\tif( isVerticalSlide() ) value.push( '/', indexv + 1 );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvalue.push( indexh + 1 );\n\t\t\t\t\tif( isVerticalSlide() ) value.push( '.', indexv + 1 );\n\t\t\t}\n\n\t\t\tdom.slideNumber.innerHTML = formatSlideNumber( value[0], value[1], value[2] );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @return {string} HTML string fragment\n\t */\n\tfunction formatSlideNumber( a, delimiter, b ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  '<span class=\"slide-number-a\">'+ a +'</span>' +\n\t\t\t\t\t'<span class=\"slide-number-delimiter\">'+ delimiter +'</span>' +\n\t\t\t\t\t'<span class=\"slide-number-b\">'+ b +'</span>';\n\t\t}\n\t\telse {\n\t\t\treturn '<span class=\"slide-number-a\">'+ a +'</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tfunction updateControls() {\n\n\t\tvar routes = availableRoutes();\n\t\tvar fragments = availableFragments();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\tdom.controlsLeft.concat( dom.controlsRight )\n\t\t\t\t\t\t.concat( dom.controlsUp )\n\t\t\t\t\t\t.concat( dom.controlsDown )\n\t\t\t\t\t\t.concat( dom.controlsPrev )\n\t\t\t\t\t\t.concat( dom.controlsNext ).forEach( function( node ) {\n\t\t\tnode.classList.remove( 'enabled' );\n\t\t\tnode.classList.remove( 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) dom.controlsLeft.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) dom.controlsRight.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) dom.controlsUp.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) dom.controlsDown.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) dom.controlsPrev.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) dom.controlsNext.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tif( currentSlide ) {\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragments.prev ) dom.controlsPrev.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragments.next ) dom.controlsNext.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragments.prev ) dom.controlsUp.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragments.next ) dom.controlsDown.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragments.prev ) dom.controlsLeft.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragments.next ) dom.controlsRight.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tfunction updateBackground( includeAll ) {\n\n\t\tvar currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tvar horizontalPast = config.rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = config.rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\ttoArray( dom.background.childNodes ).forEach( function( backgroundh, h ) {\n\n\t\t\tbackgroundh.classList.remove( 'past' );\n\t\t\tbackgroundh.classList.remove( 'present' );\n\t\t\tbackgroundh.classList.remove( 'future' );\n\n\t\t\tif( h < indexh ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indexh ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indexh ) {\n\t\t\t\ttoArray( backgroundh.querySelectorAll( '.slide-background' ) ).forEach( function( backgroundv, v ) {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past' );\n\t\t\t\t\tbackgroundv.classList.remove( 'present' );\n\t\t\t\t\tbackgroundv.classList.remove( 'future' );\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indexh ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( previousBackground ) {\n\n\t\t\tstopEmbeddedContent( previousBackground );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tstartEmbeddedContent( currentBackground );\n\n\t\t\tvar backgroundImageURL = currentBackground.style.backgroundImage || '';\n\n\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\tcurrentBackground.style.backgroundImage = '';\n\t\t\t\twindow.getComputedStyle( currentBackground ).opacity;\n\t\t\t\tcurrentBackground.style.backgroundImage = backgroundImageURL;\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tvar previousBackgroundHash = previousBackground ? previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tvar currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== previousBackground ) {\n\t\t\t\tdom.background.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tpreviousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( function( classToBubble ) {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tdom.wrapper.classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.wrapper.classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( function() {\n\t\t\tdom.background.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tfunction updateParallax() {\n\n\t\tif( config.parallaxBackgroundImage ) {\n\n\t\t\tvar horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\t\tvar backgroundSize = dom.background.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tvar slideWidth = dom.background.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof config.parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = config.parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indexh * -1;\n\n\t\t\tvar slideHeight = dom.background.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof config.parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = config.parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indexv : 0;\n\n\t\t\tdom.background.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tfunction showSlide( slide ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = config.display;\n\n\t\t// Media elements with data-src attributes\n\t\ttoArray( slide.querySelectorAll( 'img[data-src], video[data-src], audio[data-src]' ) ).forEach( function( element ) {\n\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\telement.removeAttribute( 'data-src' );\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\ttoArray( slide.querySelectorAll( 'video, audio' ) ).forEach( function( media ) {\n\t\t\tvar sources = 0;\n\n\t\t\ttoArray( media.querySelectorAll( 'source[data-src]' ) ).forEach( function( source ) {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tvar indices = getIndices( slide );\n\t\tvar background = getSlideBackground( indices.h, indices.v );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tvar backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' ),\n\t\t\t\t\tbackgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\tbackground.style.backgroundImage = 'url('+ backgroundImage +')';\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !isSpeakerNotes() ) {\n\t\t\t\t\tvar video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Inline video playback works (at least in Mobile Safari) as\n\t\t\t\t\t// long as the video is muted and the `playsinline` attribute is\n\t\t\t\t\t// present\n\t\t\t\t\tif( isMobileDevice ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.autoplay = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( function( source ) {\n\t\t\t\t\t\tvideo.innerHTML += '<source src=\"'+ source +'\">';\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackground.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe ) {\n\t\t\t\t\tvar iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\n\t\t\t\t\t// Only load autoplaying content when the slide is shown to\n\t\t\t\t\t// avoid having it play in the background\n\t\t\t\t\tif( /autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tiframe.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackground.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Called when the given slide is moved outside of the\n\t * configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction hideSlide( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tvar indices = getIndices( slide );\n\t\tvar background = getSlideBackground( indices.h, indices.v );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes() {\n\n\t\tvar horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tvar routes = {\n\t\t\tleft: indexh > 0 || config.loop,\n\t\t\tright: indexh < horizontalSlides.length - 1 || config.loop,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tvar left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tfunction availableFragments() {\n\n\t\tif( currentSlide && config.fragments ) {\n\t\t\tvar fragments = currentSlide.querySelectorAll( '.fragment' );\n\t\t\tvar hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tfunction formatEmbeddedContent() {\n\n\t\tvar _appendParamToIframeSource = function( sourceAttribute, sourceURL, param ) {\n\t\t\ttoArray( dom.slides.querySelectorAll( 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ) ).forEach( function( el ) {\n\t\t\t\tvar src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tfunction startEmbeddedContent( element ) {\n\n\t\tif( element && !isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\ttoArray( element.querySelectorAll( 'img[src$=\".gif\"]' ) ).forEach( function( el ) {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\ttoArray( element.querySelectorAll( 'video, audio' ) ).forEach( function( el ) {\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tvar autoplay = config.autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closestParent( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tstartEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\ttoArray( element.querySelectorAll( 'iframe[src]' ) ).forEach( function( el ) {\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstartEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\ttoArray( element.querySelectorAll( 'iframe[data-src]' ) ).forEach( function( el ) {\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tfunction startEmbeddedMedia( event ) {\n\n\t\tvar isAttachedToDOM = !!closestParent( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closestParent( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tfunction startEmbeddedIframe( event ) {\n\n\t\tvar iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tvar isAttachedToDOM = !!closestParent( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closestParent( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tvar autoplay = config.autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closestParent( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tfunction stopEmbeddedContent( element ) {\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\ttoArray( element.querySelectorAll( 'video, audio' ) ).forEach( function( el ) {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\ttoArray( element.querySelectorAll( 'iframe' ) ).forEach( function( el ) {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\ttoArray( element.querySelectorAll( 'iframe[src*=\"youtube.com/embed/\"]' ) ).forEach( function( el ) {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\ttoArray( element.querySelectorAll( 'iframe[src*=\"player.vimeo.com/\"]' ) ).forEach( function( el ) {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Lazy loading iframes\n\t\t\ttoArray( element.querySelectorAll( 'iframe[data-src]' ) ).forEach( function( el ) {\n\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount() {\n\n\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\n\t\t// The number of past slides\n\t\tvar pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( var i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tvar horizontalSlide = horizontalSlides[i];\n\t\t\tvar verticalSlides = toArray( horizontalSlide.querySelectorAll( 'section' ) );\n\n\t\t\tfor( var j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j].classList.contains( 'present' ) ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\tpastCount++;\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide.classList.contains( 'present' ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tvar totalCount = getTotalSlides();\n\t\tvar pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tvar allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tvar visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tvar fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount / ( totalCount - 1 );\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tfunction isSpeakerNotes() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\tfunction readURL() {\n\n\t\tvar hash = window.location.hash;\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tvar bits = hash.slice( 2 ).split( '/' ),\n\t\t\tname = hash.replace( /#|\\//gi, '' );\n\n\t\t// If the first bit is invalid and there is a name we can\n\t\t// assume that this is a named link\n\t\tif( isNaN( parseInt( bits[0], 10 ) ) && name.length ) {\n\t\t\tvar element;\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\tif( /^[a-zA-Z][\\w:.-]*$/.test( name ) ) {\n\t\t\t\t// Find the slide with the specified ID\n\t\t\t\telement = document.getElementById( name );\n\t\t\t}\n\n\t\t\tif( element ) {\n\t\t\t\t// Find the position of the named slide and navigate to it\n\t\t\t\tvar indices = Reveal.getIndices( element );\n\t\t\t\tslide( indices.h, indices.v );\n\t\t\t}\n\t\t\t// If the slide doesn't exist, navigate to the current slide\n\t\t\telse {\n\t\t\t\tslide( indexh || 0, indexv || 0 );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Read the index components of the hash\n\t\t\tvar h = parseInt( bits[0], 10 ) || 0,\n\t\t\t\tv = parseInt( bits[1], 10 ) || 0;\n\n\t\t\tif( h !== indexh || v !== indexv ) {\n\t\t\t\tslide( h, v );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\tfunction writeURL( delay ) {\n\n\t\tif( config.history ) {\n\n\t\t\t// Make sure there's never more than one timeout running\n\t\t\tclearTimeout( writeURLTimeout );\n\n\t\t\t// If a delay is specified, timeout this call\n\t\t\tif( typeof delay === 'number' ) {\n\t\t\t\twriteURLTimeout = setTimeout( writeURL, delay );\n\t\t\t}\n\t\t\telse if( currentSlide ) {\n\t\t\t\tvar url = '/';\n\n\t\t\t\t// Attempt to create a named link based on the slide's ID\n\t\t\t\tvar id = currentSlide.getAttribute( 'id' );\n\t\t\t\tif( id ) {\n\t\t\t\t\tid = id.replace( /[^a-zA-Z0-9\\-\\_\\:\\.]/g, '' );\n\t\t\t\t}\n\n\t\t\t\t// If the current slide has an ID, use that as a named link\n\t\t\t\tif( typeof id === 'string' && id.length ) {\n\t\t\t\t\turl = '/' + id;\n\t\t\t\t}\n\t\t\t\t// Otherwise use the /h/v index\n\t\t\t\telse {\n\t\t\t\t\tif( indexh > 0 || indexv > 0 ) url += indexh;\n\t\t\t\t\tif( indexv > 0 ) url += '/' + indexv;\n\t\t\t\t}\n\n\t\t\t\twindow.location.hash = url;\n\t\t\t}\n\t\t}\n\n\t}\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tvar h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tvar isVertical = isVerticalSlide( slide );\n\t\t\tvar slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( toArray( slide.parentNode.querySelectorAll( 'section' ) ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tvar hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tvar currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h: h, v: v, f: f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn toArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR + ':not(.stack)' ));\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tvar horizontalSlide = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR )[ x ];\n\t\tvar verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {number} x Horizontal background index\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\t// When printing to PDF the slide backgrounds are nested\n\t\t// inside of the slides\n\t\tif( isPrintingPDF() ) {\n\t\t\tvar slide = getSlide( x, y );\n\t\t\tif( slide ) {\n\t\t\t\treturn slide.slideBackgroundElement;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tvar horizontalBackground = dom.wrapper.querySelectorAll( '.backgrounds>.slide-background' )[ x ];\n\t\tvar verticalBackgrounds = horizontalBackground && horizontalBackground.querySelectorAll( '.slide-background' );\n\n\t\tif( verticalBackgrounds && verticalBackgrounds.length && typeof y === 'number' ) {\n\t\t\treturn verticalBackgrounds ? verticalBackgrounds[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalBackground;\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. As an <aside class=\"notes\"> inside of the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tfunction getSlideNotes( slide ) {\n\n\t\t// Default to the current slide\n\t\tslide = slide || currentSlide;\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using an <aside class=\"notes\"> element\n\t\tvar notesElement = slide.querySelector( 'aside.notes' );\n\t\tif( notesElement ) {\n\t\t\treturn notesElement.innerHTML;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tvar indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: isOverview()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( deserialize( state.indexh ), deserialize( state.indexv ), deserialize( state.indexf ) );\n\n\t\t\tvar pausedFlag = deserialize( state.paused ),\n\t\t\t\toverviewFlag = deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== isOverview() ) {\n\t\t\t\ttoggleOverview( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tfunction sortFragments( fragments ) {\n\n\t\tfragments = toArray( fragments );\n\n\t\tvar ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( function( fragment, i ) {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tvar index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tvar index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( function( group ) {\n\t\t\tgroup.forEach( function( fragment ) {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn sorted;\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tfunction navigateFragment( index, offset ) {\n\n\t\tif( currentSlide && config.fragments ) {\n\n\t\t\tvar fragments = sortFragments( currentSlide.querySelectorAll( '.fragment' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tvar lastVisibleFragment = sortFragments( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If an offset is specified, apply it to the index\n\t\t\t\tif( typeof offset === 'number' ) {\n\t\t\t\t\tindex += offset;\n\t\t\t\t}\n\n\t\t\t\tvar fragmentsShown = [],\n\t\t\t\t\tfragmentsHidden = [];\n\n\t\t\t\ttoArray( fragments ).forEach( function( element, i ) {\n\n\t\t\t\t\tif( element.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( element.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tif( !element.classList.contains( 'visible' ) ) fragmentsShown.push( element );\n\t\t\t\t\t\telement.classList.add( 'visible' );\n\t\t\t\t\t\telement.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\tdom.statusDiv.textContent = getStatusText( element );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\telement.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tstartEmbeddedContent( element );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( element.classList.contains( 'visible' ) ) fragmentsHidden.push( element );\n\t\t\t\t\t\telement.classList.remove( 'visible' );\n\t\t\t\t\t\telement.classList.remove( 'current-fragment' );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tif( fragmentsHidden.length ) {\n\t\t\t\t\tdispatchEvent( 'fragmenthidden', { fragment: fragmentsHidden[0], fragments: fragmentsHidden } );\n\t\t\t\t}\n\n\t\t\t\tif( fragmentsShown.length ) {\n\t\t\t\t\tdispatchEvent( 'fragmentshown', { fragment: fragmentsShown[0], fragments: fragmentsShown } );\n\t\t\t\t}\n\n\t\t\t\tupdateControls();\n\t\t\t\tupdateProgress();\n\n\t\t\t\treturn !!( fragmentsShown.length || fragmentsHidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tfunction nextFragment() {\n\n\t\treturn navigateFragment( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tfunction previousFragment() {\n\n\t\treturn navigateFragment( null, -1 );\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide ) {\n\n\t\t\tvar fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tvar fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tvar parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tvar slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\t\t\t}\n\n\t\t\t// If there are media elements with data-autoplay,\n\t\t\t// automatically set the autoSlide duration to the\n\t\t\t// length of that media. Not applicable if the slide\n\t\t\t// is divided up into fragments.\n\t\t\t// playbackRate is accounted for in the duration.\n\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\ttoArray( currentSlide.querySelectorAll( 'video, audio' ) ).forEach( function( el ) {\n\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !isOverview() && ( !Reveal.isLastSlide() || availableFragments().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( function() {\n\t\t\t\t\ttypeof config.autoSlideMethod === 'function' ? config.autoSlideMethod() : navigateNext();\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent( 'autoslidepaused' );\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent( 'autoslideresumed' );\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft() {\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( isOverview() || nextFragment() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1 );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( isOverview() || previousFragment() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateRight() {\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( isOverview() || previousFragment() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1 );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( isOverview() || nextFragment() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateUp() {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( isOverview() || previousFragment() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown() {\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( isOverview() || nextFragment() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev() {\n\n\t\t// Prioritize revealing fragments\n\t\tif( previousFragment() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tvar previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR + '.future' ) ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR + '.past' ) ).pop();\n\t\t\t\t}\n\n\t\t\t\tif( previousSlide ) {\n\t\t\t\t\tvar v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tvar h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext() {\n\n\t\t// Prioritize revealing fragments\n\t\tif( nextFragment() === false ) {\n\t\t\tif( availableRoutes().down ) {\n\t\t\t\tnavigateDown();\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tfunction isSwipePrevented( target ) {\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\ttoggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onDocumentKeyDown( event ) {\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition() === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tvar autoSlideWasPaused = autoSlidePaused;\n\n\t\tonUserInput( event );\n\n\t\t// Check if there's a focused element that could be using\n\t\t// the keyboard\n\t\tvar activeElementIsCE = document.activeElement && document.activeElement.contentEditable !== 'inherit';\n\t\tvar activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tvar activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || (event.shiftKey && event.keyCode !== 32) || event.altKey || event.ctrlKey || event.metaKey ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tvar resumeKeyCodes = [66,86,190,191];\n\t\tvar key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( isPaused() && resumeKeyCodes.indexOf( event.keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === event.keyCode ) {\n\n\t\t\t\t\tvar value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tReveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\tswitch( event.keyCode ) {\n\t\t\t\t// p, page up\n\t\t\t\tcase 80: case 33: navigatePrev(); break;\n\t\t\t\t// n, page down\n\t\t\t\tcase 78: case 34: navigateNext(); break;\n\t\t\t\t// h, left\n\t\t\t\tcase 72: case 37: navigateLeft(); break;\n\t\t\t\t// l, right\n\t\t\t\tcase 76: case 39: navigateRight(); break;\n\t\t\t\t// k, up\n\t\t\t\tcase 75: case 38: navigateUp(); break;\n\t\t\t\t// j, down\n\t\t\t\tcase 74: case 40: navigateDown(); break;\n\t\t\t\t// home\n\t\t\t\tcase 36: slide( 0 ); break;\n\t\t\t\t// end\n\t\t\t\tcase 35: slide( Number.MAX_VALUE ); break;\n\t\t\t\t// space\n\t\t\t\tcase 32: isOverview() ? deactivateOverview() : event.shiftKey ? navigatePrev() : navigateNext(); break;\n\t\t\t\t// return\n\t\t\t\tcase 13: isOverview() ? deactivateOverview() : triggered = false; break;\n\t\t\t\t// two-spot, semicolon, b, v, period, Logitech presenter tools \"black screen\" button\n\t\t\t\tcase 58: case 59: case 66: case 86: case 190: case 191: togglePause(); break;\n\t\t\t\t// f\n\t\t\t\tcase 70: enterFullscreen(); break;\n\t\t\t\t// a\n\t\t\t\tcase 65: if ( config.autoSlideStoppable ) toggleAutoSlide( autoSlideWasPaused ); break;\n\t\t\t\tdefault:\n\t\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if ( ( event.keyCode === 27 || event.keyCode === 79 ) && features.transforms3d ) {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoggleOverview();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tcueAutoSlide();\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onTouchStart( event ) {\n\n\t\tif( isSwipePrevented( event.target ) ) return true;\n\n\t\ttouch.startX = event.touches[0].clientX;\n\t\ttouch.startY = event.touches[0].clientY;\n\t\ttouch.startCount = event.touches.length;\n\n\t\t// If there's two touches we need to memorize the distance\n\t\t// between those two points to detect pinching\n\t\tif( event.touches.length === 2 && config.overview ) {\n\t\t\ttouch.startSpan = distanceBetween( {\n\t\t\t\tx: event.touches[1].clientX,\n\t\t\t\ty: event.touches[1].clientY\n\t\t\t}, {\n\t\t\t\tx: touch.startX,\n\t\t\t\ty: touch.startY\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onTouchMove( event ) {\n\n\t\tif( isSwipePrevented( event.target ) ) return true;\n\n\t\t// Each touch should only trigger one action\n\t\tif( !touch.captured ) {\n\t\t\tonUserInput( event );\n\n\t\t\tvar currentX = event.touches[0].clientX;\n\t\t\tvar currentY = event.touches[0].clientY;\n\n\t\t\t// If the touch started with two points and still has\n\t\t\t// two active touches; test for the pinch gesture\n\t\t\tif( event.touches.length === 2 && touch.startCount === 2 && config.overview ) {\n\n\t\t\t\t// The current distance in pixels between the two touch points\n\t\t\t\tvar currentSpan = distanceBetween( {\n\t\t\t\t\tx: event.touches[1].clientX,\n\t\t\t\t\ty: event.touches[1].clientY\n\t\t\t\t}, {\n\t\t\t\t\tx: touch.startX,\n\t\t\t\t\ty: touch.startY\n\t\t\t\t} );\n\n\t\t\t\t// If the span is larger than the desire amount we've got\n\t\t\t\t// ourselves a pinch\n\t\t\t\tif( Math.abs( touch.startSpan - currentSpan ) > touch.threshold ) {\n\t\t\t\t\ttouch.captured = true;\n\n\t\t\t\t\tif( currentSpan < touch.startSpan ) {\n\t\t\t\t\t\tactivateOverview();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdeactivateOverview();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t}\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\telse if( event.touches.length === 1 && touch.startCount !== 2 ) {\n\n\t\t\t\tvar deltaX = currentX - touch.startX,\n\t\t\t\t\tdeltaY = currentY - touch.startY;\n\n\t\t\t\tif( deltaX > touch.threshold && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\ttouch.captured = true;\n\t\t\t\t\tnavigateLeft();\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -touch.threshold && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\ttouch.captured = true;\n\t\t\t\t\tnavigateRight();\n\t\t\t\t}\n\t\t\t\telse if( deltaY > touch.threshold ) {\n\t\t\t\t\ttouch.captured = true;\n\t\t\t\t\tnavigateUp();\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -touch.threshold ) {\n\t\t\t\t\ttouch.captured = true;\n\t\t\t\t\tnavigateDown();\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( touch.captured || isVerticalSlide( currentSlide ) ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( UA.match( /android/gi ) ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onTouchEnd( event ) {\n\n\t\ttouch.captured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tonTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tonTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tonTouchEnd( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - lastMouseWheelStep > 600 ) {\n\n\t\t\tlastMouseWheelStep = Date.now();\n\n\t\t\tvar delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tnavigateNext();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tnavigatePrev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tfunction onProgressClicked( event ) {\n\n\t\tonUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tvar slidesTotal = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ).length;\n\t\tvar slideIndex = Math.floor( ( event.clientX / dom.wrapper.offsetWidth ) * slidesTotal );\n\n\t\tif( config.rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tslide( slideIndex );\n\n\t}\n\n\t/**\n\t * Event handler for navigation control buttons.\n\t */\n\tfunction onNavigateLeftClicked( event ) { event.preventDefault(); onUserInput(); navigateLeft(); }\n\tfunction onNavigateRightClicked( event ) { event.preventDefault(); onUserInput(); navigateRight(); }\n\tfunction onNavigateUpClicked( event ) { event.preventDefault(); onUserInput(); navigateUp(); }\n\tfunction onNavigateDownClicked( event ) { event.preventDefault(); onUserInput(); navigateDown(); }\n\tfunction onNavigatePrevClicked( event ) { event.preventDefault(); onUserInput(); navigatePrev(); }\n\tfunction onNavigateNextClicked( event ) { event.preventDefault(); onUserInput(); navigateNext(); }\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowHashChange( event ) {\n\n\t\treadURL();\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\tvar isHidden =  document.webkitHidden ||\n\t\t\t\t\t\tdocument.msHidden ||\n\t\t\t\t\t\tdocument.hidden;\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( isHidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onOverviewSlideClicked( event ) {\n\n\t\t// TODO There's a bug here where the event listeners are not\n\t\t// removed after deactivating the overview.\n\t\tif( eventsAreBound && isOverview() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tdeactivateOverview();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tvar h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tvar url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( Reveal.isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------ PLAYBACK COMPONENT ------------------------//\n\t// --------------------------------------------------------------------//\n\n\n\t/**\n\t * Constructor for the playback component, which displays\n\t * play/pause/progress controls.\n\t *\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current progress on a range\n\t * of 0-1\n\t */\n\tfunction Playback( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\t/**\n\t * @param value\n\t */\n\tPlayback.prototype.setPlaying = function( value ) {\n\n\t\tvar wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t};\n\n\tPlayback.prototype.animate = function() {\n\n\t\tvar progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\tfeatures.requestAnimationFrameMethod.call( window, this.animate.bind( this ) );\n\t\t}\n\n\t};\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\tPlayback.prototype.render = function() {\n\n\t\tvar progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tvar endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tvar startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = '#666';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t};\n\n\tPlayback.prototype.on = function( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t};\n\n\tPlayback.prototype.off = function( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t};\n\n\tPlayback.prototype.destroy = function() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t};\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\n\tReveal = {\n\t\tVERSION: VERSION,\n\n\t\tinitialize: initialize,\n\t\tconfigure: configure,\n\t\tsync: sync,\n\n\t\t// Navigation methods\n\t\tslide: slide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: navigateFragment,\n\t\tprevFragment: previousFragment,\n\t\tnextFragment: nextFragment,\n\n\t\t// Deprecated aliases\n\t\tnavigateTo: slide,\n\t\tnavigateLeft: navigateLeft,\n\t\tnavigateRight: navigateRight,\n\t\tnavigateUp: navigateUp,\n\t\tnavigateDown: navigateDown,\n\t\tnavigatePrev: navigatePrev,\n\t\tnavigateNext: navigateNext,\n\n\t\t// Forces an update in slide layout\n\t\tlayout: layout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle: shuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes: availableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: availableFragments,\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp: toggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: toggleOverview,\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause: togglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide: toggleAutoSlide,\n\n\t\t// State checks\n\t\tisOverview: isOverview,\n\t\tisPaused: isPaused,\n\t\tisAutoSliding: isAutoSliding,\n\n\t\t// Adds or removes all internal event listeners (such as keyboard)\n\t\taddEventListeners: addEventListeners,\n\t\tremoveEventListeners: removeEventListeners,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState: getState,\n\t\tsetState: setState,\n\n\t\t// Presentation progress\n\t\tgetSlidePastCount: getSlidePastCount,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress: getProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices: getIndices,\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides: getSlides,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides: getTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide: getSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground: getSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: getSlideNotes,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: function() {\n\t\t\treturn previousSlide;\n\t\t},\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: function() {\n\t\t\treturn currentSlide;\n\t\t},\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: function() {\n\t\t\treturn scale;\n\t\t},\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: function() {\n\t\t\treturn config;\n\t\t},\n\n\t\t// Helper method, retrieves query string as a key/value hash\n\t\tgetQueryHash: function() {\n\t\t\tvar query = {};\n\n\t\t\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, function(a) {\n\t\t\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t\t\t} );\n\n\t\t\t// Basic deserialization\n\t\t\tfor( var i in query ) {\n\t\t\t\tvar value = query[ i ];\n\n\t\t\t\tquery[ i ] = deserialize( unescape( value ) );\n\t\t\t}\n\n\t\t\treturn query;\n\t\t},\n\n\t\t// Returns true if we're currently on the first slide\n\t\tisFirstSlide: function() {\n\t\t\treturn ( indexh === 0 && indexv === 0 );\n\t\t},\n\n\t\t// Returns true if we're currently on the last slide\n\t\tisLastSlide: function() {\n\t\t\tif( currentSlide ) {\n\t\t\t\t// Does this slide has next a sibling?\n\t\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: function() {\n\t\t\treturn loaded;\n\t\t},\n\n\t\t// Forward event binding to the reveal DOM element\n\t\taddEventListener: function( type, listener, useCapture ) {\n\t\t\tif( 'addEventListener' in window ) {\n\t\t\t\t( dom.wrapper || document.querySelector( '.reveal' ) ).addEventListener( type, listener, useCapture );\n\t\t\t}\n\t\t},\n\t\tremoveEventListener: function( type, listener, useCapture ) {\n\t\t\tif( 'addEventListener' in window ) {\n\t\t\t\t( dom.wrapper || document.querySelector( '.reveal' ) ).removeEventListener( type, listener, useCapture );\n\t\t\t}\n\t\t},\n\n\t\t// Programatically triggers a keyboard event\n\t\ttriggerKey: function( keyCode ) {\n\t\t\tonDocumentKeyDown( { keyCode: keyCode } );\n\t\t},\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: function( key, value ) {\n\t\t\tkeyboardShortcuts[key] = value;\n\t\t}\n\t};\n\n\treturn Reveal;\n\n}));\n\n\n/***/ }),\n\n/***/ 78:\n/***/ (function(module, exports) {\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\nif(typeof document!==\"undefined\"&&!(\"classList\" in document.createElement(\"a\"))){(function(j){var a=\"classList\",f=\"prototype\",m=(j.HTMLElement||j.Element)[f],b=Object,k=String[f].trim||function(){return this.replace(/^\\s+|\\s+$/g,\"\")},c=Array[f].indexOf||function(q){var p=0,o=this.length;for(;p<o;p++){if(p in this&&this[p]===q){return p}}return -1},n=function(o,p){this.name=o;this.code=DOMException[o];this.message=p},g=function(p,o){if(o===\"\"){throw new n(\"SYNTAX_ERR\",\"An invalid or illegal string was specified\")}if(/\\s/.test(o)){throw new n(\"INVALID_CHARACTER_ERR\",\"String contains an invalid character\")}return c.call(p,o)},d=function(s){var r=k.call(s.className),q=r?r.split(/\\s+/):[],p=0,o=q.length;for(;p<o;p++){this.push(q[p])}this._updateClassName=function(){s.className=this.toString()}},e=d[f]=[],i=function(){return new d(this)};n[f]=Error[f];e.item=function(o){return this[o]||null};e.contains=function(o){o+=\"\";return g(this,o)!==-1};e.add=function(o){o+=\"\";if(g(this,o)===-1){this.push(o);this._updateClassName()}};e.remove=function(p){p+=\"\";var o=g(this,p);if(o!==-1){this.splice(o,1);this._updateClassName()}};e.toggle=function(o){o+=\"\";if(g(this,o)===-1){this.add(o)}else{this.remove(o)}};e.toString=function(){return this.join(\" \")};if(b.defineProperty){var l={get:i,enumerable:true,configurable:true};try{b.defineProperty(m,a,l)}catch(h){if(h.number===-2146823252){l.enumerable=false;b.defineProperty(m,a,l)}}}else{if(b[f].__defineGetter__){m.__defineGetter__(a,i)}}}(self))};\n\n/***/ }),\n\n/***/ 79:\n/***/ (function(module, exports) {\n\n﻿/*! head.core - v1.0.2 */\n(function(n,t){\"use strict\";function r(n){a[a.length]=n}function k(n){var t=new RegExp(\" ?\\\\b\"+n+\"\\\\b\");c.className=c.className.replace(t,\"\")}function p(n,t){for(var i=0,r=n.length;i<r;i++)t.call(n,n[i],i)}function tt(){var t,e,f,o;c.className=c.className.replace(/ (w-|eq-|gt-|gte-|lt-|lte-|portrait|no-portrait|landscape|no-landscape)\\d+/g,\"\");t=n.innerWidth||c.clientWidth;e=n.outerWidth||n.screen.width;u.screen.innerWidth=t;u.screen.outerWidth=e;r(\"w-\"+t);p(i.screens,function(n){t>n?(i.screensCss.gt&&r(\"gt-\"+n),i.screensCss.gte&&r(\"gte-\"+n)):t<n?(i.screensCss.lt&&r(\"lt-\"+n),i.screensCss.lte&&r(\"lte-\"+n)):t===n&&(i.screensCss.lte&&r(\"lte-\"+n),i.screensCss.eq&&r(\"e-q\"+n),i.screensCss.gte&&r(\"gte-\"+n))});f=n.innerHeight||c.clientHeight;o=n.outerHeight||n.screen.height;u.screen.innerHeight=f;u.screen.outerHeight=o;u.feature(\"portrait\",f>t);u.feature(\"landscape\",f<t)}function it(){n.clearTimeout(b);b=n.setTimeout(tt,50)}var y=n.document,rt=n.navigator,ut=n.location,c=y.documentElement,a=[],i={screens:[240,320,480,640,768,800,1024,1280,1440,1680,1920],screensCss:{gt:!0,gte:!1,lt:!0,lte:!1,eq:!1},browsers:[{ie:{min:6,max:11}}],browserCss:{gt:!0,gte:!1,lt:!0,lte:!1,eq:!0},html5:!0,page:\"-page\",section:\"-section\",head:\"head\"},v,u,s,w,o,h,l,d,f,g,nt,e,b;if(n.head_conf)for(v in n.head_conf)n.head_conf[v]!==t&&(i[v]=n.head_conf[v]);u=n[i.head]=function(){u.ready.apply(null,arguments)};u.feature=function(n,t,i){return n?(Object.prototype.toString.call(t)===\"[object Function]\"&&(t=t.call()),r((t?\"\":\"no-\")+n),u[n]=!!t,i||(k(\"no-\"+n),k(n),u.feature()),u):(c.className+=\" \"+a.join(\" \"),a=[],u)};u.feature(\"js\",!0);s=rt.userAgent.toLowerCase();w=/mobile|android|kindle|silk|midp|phone|(windows .+arm|touch)/.test(s);u.feature(\"mobile\",w,!0);u.feature(\"desktop\",!w,!0);s=/(chrome|firefox)[ \\/]([\\w.]+)/.exec(s)||/(iphone|ipad|ipod)(?:.*version)?[ \\/]([\\w.]+)/.exec(s)||/(android)(?:.*version)?[ \\/]([\\w.]+)/.exec(s)||/(webkit|opera)(?:.*version)?[ \\/]([\\w.]+)/.exec(s)||/(msie) ([\\w.]+)/.exec(s)||/(trident).+rv:(\\w.)+/.exec(s)||[];o=s[1];h=parseFloat(s[2]);switch(o){case\"msie\":case\"trident\":o=\"ie\";h=y.documentMode||h;break;case\"firefox\":o=\"ff\";break;case\"ipod\":case\"ipad\":case\"iphone\":o=\"ios\";break;case\"webkit\":o=\"safari\"}for(u.browser={name:o,version:h},u.browser[o]=!0,l=0,d=i.browsers.length;l<d;l++)for(f in i.browsers[l])if(o===f)for(r(f),g=i.browsers[l][f].min,nt=i.browsers[l][f].max,e=g;e<=nt;e++)h>e?(i.browserCss.gt&&r(\"gt-\"+f+e),i.browserCss.gte&&r(\"gte-\"+f+e)):h<e?(i.browserCss.lt&&r(\"lt-\"+f+e),i.browserCss.lte&&r(\"lte-\"+f+e)):h===e&&(i.browserCss.lte&&r(\"lte-\"+f+e),i.browserCss.eq&&r(\"eq-\"+f+e),i.browserCss.gte&&r(\"gte-\"+f+e));else r(\"no-\"+f);r(o);r(o+parseInt(h,10));i.html5&&o===\"ie\"&&h<9&&p(\"abbr|article|aside|audio|canvas|details|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|progress|section|summary|time|video\".split(\"|\"),function(n){y.createElement(n)});p(ut.pathname.split(\"/\"),function(n,u){if(this.length>2&&this[u+1]!==t)u&&r(this.slice(u,u+1).join(\"-\").toLowerCase()+i.section);else{var f=n||\"index\",e=f.indexOf(\".\");e>0&&(f=f.substring(0,e));c.id=f.toLowerCase()+i.page;u||r(\"root\"+i.section)}});u.screen={height:n.screen.height,width:n.screen.width};tt();b=0;n.addEventListener?n.addEventListener(\"resize\",it,!1):n.attachEvent(\"onresize\",it)})(window);\n/*! head.css3 - v1.0.0 */\n(function(n,t){\"use strict\";function a(n){for(var r in n)if(i[n[r]]!==t)return!0;return!1}function r(n){var t=n.charAt(0).toUpperCase()+n.substr(1),i=(n+\" \"+c.join(t+\" \")+t).split(\" \");return!!a(i)}var h=n.document,o=h.createElement(\"i\"),i=o.style,s=\" -o- -moz- -ms- -webkit- -khtml- \".split(\" \"),c=\"Webkit Moz O ms Khtml\".split(\" \"),l=n.head_conf&&n.head_conf.head||\"head\",u=n[l],f={gradient:function(){var n=\"background-image:\";return i.cssText=(n+s.join(\"gradient(linear,left top,right bottom,from(#9f9),to(#fff));\"+n)+s.join(\"linear-gradient(left top,#eee,#fff);\"+n)).slice(0,-n.length),!!i.backgroundImage},rgba:function(){return i.cssText=\"background-color:rgba(0,0,0,0.5)\",!!i.backgroundColor},opacity:function(){return o.style.opacity===\"\"},textshadow:function(){return i.textShadow===\"\"},multiplebgs:function(){i.cssText=\"background:url(https://),url(https://),red url(https://)\";var n=(i.background||\"\").match(/url/g);return Object.prototype.toString.call(n)===\"[object Array]\"&&n.length===3},boxshadow:function(){return r(\"boxShadow\")},borderimage:function(){return r(\"borderImage\")},borderradius:function(){return r(\"borderRadius\")},cssreflections:function(){return r(\"boxReflect\")},csstransforms:function(){return r(\"transform\")},csstransitions:function(){return r(\"transition\")},touch:function(){return\"ontouchstart\"in n},retina:function(){return n.devicePixelRatio>1},fontface:function(){var t=u.browser.name,n=u.browser.version;switch(t){case\"ie\":return n>=9;case\"chrome\":return n>=13;case\"ff\":return n>=6;case\"ios\":return n>=5;case\"android\":return!1;case\"webkit\":return n>=5.1;case\"opera\":return n>=10;default:return!1}}};for(var e in f)f[e]&&u.feature(e,f[e].call(),!0);u.feature()})(window);\n/*! head.load - v1.0.3 */\n(function(n,t){\"use strict\";function w(){}function u(n,t){if(n){typeof n==\"object\"&&(n=[].slice.call(n));for(var i=0,r=n.length;i<r;i++)t.call(n,n[i],i)}}function it(n,i){var r=Object.prototype.toString.call(i).slice(8,-1);return i!==t&&i!==null&&r===n}function s(n){return it(\"Function\",n)}function a(n){return it(\"Array\",n)}function et(n){var i=n.split(\"/\"),t=i[i.length-1],r=t.indexOf(\"?\");return r!==-1?t.substring(0,r):t}function f(n){(n=n||w,n._done)||(n(),n._done=1)}function ot(n,t,r,u){var f=typeof n==\"object\"?n:{test:n,success:!t?!1:a(t)?t:[t],failure:!r?!1:a(r)?r:[r],callback:u||w},e=!!f.test;return e&&!!f.success?(f.success.push(f.callback),i.load.apply(null,f.success)):e||!f.failure?u():(f.failure.push(f.callback),i.load.apply(null,f.failure)),i}function v(n){var t={},i,r;if(typeof n==\"object\")for(i in n)!n[i]||(t={name:i,url:n[i]});else t={name:et(n),url:n};return(r=c[t.name],r&&r.url===t.url)?r:(c[t.name]=t,t)}function y(n){n=n||c;for(var t in n)if(n.hasOwnProperty(t)&&n[t].state!==l)return!1;return!0}function st(n){n.state=ft;u(n.onpreload,function(n){n.call()})}function ht(n){n.state===t&&(n.state=nt,n.onpreload=[],rt({url:n.url,type:\"cache\"},function(){st(n)}))}function ct(){var n=arguments,t=n[n.length-1],r=[].slice.call(n,1),f=r[0];return(s(t)||(t=null),a(n[0]))?(n[0].push(t),i.load.apply(null,n[0]),i):(f?(u(r,function(n){s(n)||!n||ht(v(n))}),b(v(n[0]),s(f)?f:function(){i.load.apply(null,r)})):b(v(n[0])),i)}function lt(){var n=arguments,t=n[n.length-1],r={};return(s(t)||(t=null),a(n[0]))?(n[0].push(t),i.load.apply(null,n[0]),i):(u(n,function(n){n!==t&&(n=v(n),r[n.name]=n)}),u(n,function(n){n!==t&&(n=v(n),b(n,function(){y(r)&&f(t)}))}),i)}function b(n,t){if(t=t||w,n.state===l){t();return}if(n.state===tt){i.ready(n.name,t);return}if(n.state===nt){n.onpreload.push(function(){b(n,t)});return}n.state=tt;rt(n,function(){n.state=l;t();u(h[n.name],function(n){f(n)});o&&y()&&u(h.ALL,function(n){f(n)})})}function at(n){n=n||\"\";var t=n.split(\"?\")[0].split(\".\");return t[t.length-1].toLowerCase()}function rt(t,i){function e(t){t=t||n.event;u.onload=u.onreadystatechange=u.onerror=null;i()}function o(f){f=f||n.event;(f.type===\"load\"||/loaded|complete/.test(u.readyState)&&(!r.documentMode||r.documentMode<9))&&(n.clearTimeout(t.errorTimeout),n.clearTimeout(t.cssTimeout),u.onload=u.onreadystatechange=u.onerror=null,i())}function s(){if(t.state!==l&&t.cssRetries<=20){for(var i=0,f=r.styleSheets.length;i<f;i++)if(r.styleSheets[i].href===u.href){o({type:\"load\"});return}t.cssRetries++;t.cssTimeout=n.setTimeout(s,250)}}var u,h,f;i=i||w;h=at(t.url);h===\"css\"?(u=r.createElement(\"link\"),u.type=\"text/\"+(t.type||\"css\"),u.rel=\"stylesheet\",u.href=t.url,t.cssRetries=0,t.cssTimeout=n.setTimeout(s,500)):(u=r.createElement(\"script\"),u.type=\"text/\"+(t.type||\"javascript\"),u.src=t.url);u.onload=u.onreadystatechange=o;u.onerror=e;u.async=!1;u.defer=!1;t.errorTimeout=n.setTimeout(function(){e({type:\"timeout\"})},7e3);f=r.head||r.getElementsByTagName(\"head\")[0];f.insertBefore(u,f.lastChild)}function vt(){for(var t,u=r.getElementsByTagName(\"script\"),n=0,f=u.length;n<f;n++)if(t=u[n].getAttribute(\"data-headjs-load\"),!!t){i.load(t);return}}function yt(n,t){var v,p,e;return n===r?(o?f(t):d.push(t),i):(s(n)&&(t=n,n=\"ALL\"),a(n))?(v={},u(n,function(n){v[n]=c[n];i.ready(n,function(){y(v)&&f(t)})}),i):typeof n!=\"string\"||!s(t)?i:(p=c[n],p&&p.state===l||n===\"ALL\"&&y()&&o)?(f(t),i):(e=h[n],e?e.push(t):e=h[n]=[t],i)}function e(){if(!r.body){n.clearTimeout(i.readyTimeout);i.readyTimeout=n.setTimeout(e,50);return}o||(o=!0,vt(),u(d,function(n){f(n)}))}function k(){r.addEventListener?(r.removeEventListener(\"DOMContentLoaded\",k,!1),e()):r.readyState===\"complete\"&&(r.detachEvent(\"onreadystatechange\",k),e())}var r=n.document,d=[],h={},c={},ut=\"async\"in r.createElement(\"script\")||\"MozAppearance\"in r.documentElement.style||n.opera,o,g=n.head_conf&&n.head_conf.head||\"head\",i=n[g]=n[g]||function(){i.ready.apply(null,arguments)},nt=1,ft=2,tt=3,l=4,p;if(r.readyState===\"complete\")e();else if(r.addEventListener)r.addEventListener(\"DOMContentLoaded\",k,!1),n.addEventListener(\"load\",e,!1);else{r.attachEvent(\"onreadystatechange\",k);n.attachEvent(\"onload\",e);p=!1;try{p=!n.frameElement&&r.documentElement}catch(wt){}p&&p.doScroll&&function pt(){if(!o){try{p.doScroll(\"left\")}catch(t){n.clearTimeout(i.readyTimeout);i.readyTimeout=n.setTimeout(pt,50);return}e()}}()}i.load=i.js=ut?lt:ct;i.test=ot;i.ready=yt;i.ready(r,function(){y()&&u(h.ALL,function(n){f(n)});i.feature&&i.feature(\"domloaded\",!0)})})(window);\n/*\n//# sourceMappingURL=head.min.js.map\n*/\n\n/***/ }),\n\n/***/ 80:\n/***/ (function(module, exports) {\n\ndocument.createElement('header');\ndocument.createElement('nav');\ndocument.createElement('section');\ndocument.createElement('article');\ndocument.createElement('aside');\ndocument.createElement('footer');\ndocument.createElement('hgroup');\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.js","module.exports = __webpack_public_path__ + \"node_modules/reveal.js/plugin/markdown/marked.js\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reveal.js/plugin/markdown/marked.js\n// module id = 379\n// module chunks = 0","/*!\n * reveal.js\n * http://lab.hakim.se/reveal-js\n * MIT licensed\n *\n * Copyright (C) 2017 Hakim El Hattab, http://hakim.se\n */\n(function( root, factory ) {\n\tif( typeof define === 'function' && define.amd ) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( function() {\n\t\t\troot.Reveal = factory();\n\t\t\treturn root.Reveal;\n\t\t} );\n\t} else if( typeof exports === 'object' ) {\n\t\t// Node. Does not work with strict CommonJS.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals.\n\t\troot.Reveal = factory();\n\t}\n}( this, function() {\n\n\t'use strict';\n\n\tvar Reveal;\n\n\t// The reveal.js version\n\tvar VERSION = '3.5.0';\n\n\tvar SLIDES_SELECTOR = '.slides section',\n\t\tHORIZONTAL_SLIDES_SELECTOR = '.slides>section',\n\t\tVERTICAL_SLIDES_SELECTOR = '.slides>section.present>section',\n\t\tHOME_SLIDE_SELECTOR = '.slides>section:first-of-type',\n\t\tUA = navigator.userAgent,\n\n\t\t// Configuration defaults, can be overridden at initialization time\n\t\tconfig = {\n\n\t\t\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t\t\t// when the presentation is scaled to fit different resolutions\n\t\t\twidth: 960,\n\t\t\theight: 700,\n\n\t\t\t// Factor of the display size that should remain empty around the content\n\t\t\tmargin: 0.04,\n\n\t\t\t// Bounds for smallest/largest possible scale to apply to content\n\t\t\tminScale: 0.2,\n\t\t\tmaxScale: 2.0,\n\n\t\t\t// Display controls in the bottom right corner\n\t\t\tcontrols: true,\n\n\t\t\t// Display a presentation progress bar\n\t\t\tprogress: true,\n\n\t\t\t// Display the page number of the current slide\n\t\t\tslideNumber: false,\n\n\t\t\t// Determine which displays to show the slide number on\n\t\t\tshowSlideNumber: 'all',\n\n\t\t\t// Push each slide change to the browser history\n\t\t\thistory: false,\n\n\t\t\t// Enable keyboard shortcuts for navigation\n\t\t\tkeyboard: true,\n\n\t\t\t// Optional function that blocks keyboard events when retuning false\n\t\t\tkeyboardCondition: null,\n\n\t\t\t// Enable the slide overview mode\n\t\t\toverview: true,\n\n\t\t\t// Vertical centering of slides\n\t\t\tcenter: true,\n\n\t\t\t// Enables touch navigation on devices with touch input\n\t\t\ttouch: true,\n\n\t\t\t// Loop the presentation\n\t\t\tloop: false,\n\n\t\t\t// Change the presentation direction to be RTL\n\t\t\trtl: false,\n\n\t\t\t// Randomizes the order of slides each time the presentation loads\n\t\t\tshuffle: false,\n\n\t\t\t// Turns fragments on and off globally\n\t\t\tfragments: true,\n\n\t\t\t// Flags if the presentation is running in an embedded mode,\n\t\t\t// i.e. contained within a limited portion of the screen\n\t\t\tembedded: false,\n\n\t\t\t// Flags if we should show a help overlay when the question-mark\n\t\t\t// key is pressed\n\t\t\thelp: true,\n\n\t\t\t// Flags if it should be possible to pause the presentation (blackout)\n\t\t\tpause: true,\n\n\t\t\t// Flags if speaker notes should be visible to all viewers\n\t\t\tshowNotes: false,\n\n\t\t\t// Global override for autolaying embedded media (video/audio/iframe)\n\t\t\t// - null: Media will only autoplay if data-autoplay is present\n\t\t\t// - true: All media will autoplay, regardless of individual setting\n\t\t\t// - false: No media will autoplay, regardless of individual setting\n\t\t\tautoPlayMedia: null,\n\n\t\t\t// Number of milliseconds between automatically proceeding to the\n\t\t\t// next slide, disabled when set to 0, this value can be overwritten\n\t\t\t// by using a data-autoslide attribute on your slides\n\t\t\tautoSlide: 0,\n\n\t\t\t// Stop auto-sliding after user input\n\t\t\tautoSlideStoppable: true,\n\n\t\t\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\t\t\tautoSlideMethod: null,\n\n\t\t\t// Enable slide navigation via mouse wheel\n\t\t\tmouseWheel: false,\n\n\t\t\t// Apply a 3D roll to links on hover\n\t\t\trollingLinks: false,\n\n\t\t\t// Hides the address bar on mobile devices\n\t\t\thideAddressBar: true,\n\n\t\t\t// Opens links in an iframe preview overlay\n\t\t\tpreviewLinks: false,\n\n\t\t\t// Exposes the reveal.js API through window.postMessage\n\t\t\tpostMessage: true,\n\n\t\t\t// Dispatches all reveal.js events to the parent window through postMessage\n\t\t\tpostMessageEvents: false,\n\n\t\t\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\t\t\tfocusBodyOnPageVisibilityChange: true,\n\n\t\t\t// Transition style\n\t\t\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t\t\t// Transition speed\n\t\t\ttransitionSpeed: 'default', // default/fast/slow\n\n\t\t\t// Transition style for full page slide backgrounds\n\t\t\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t\t\t// Parallax background image\n\t\t\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t\t\t// Parallax background size\n\t\t\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t\t\t// Amount of pixels to move the parallax background per slide step\n\t\t\tparallaxBackgroundHorizontal: null,\n\t\t\tparallaxBackgroundVertical: null,\n\n\t\t\t// The maximum number of pages a single slide can expand onto when printing\n\t\t\t// to PDF, unlimited by default\n\t\t\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t\t\t// Offset used to reduce the height of content within exported PDF pages.\n\t\t\t// This exists to account for environment differences based on how you\n\t\t\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t\t\t// on precisely the total height of the document whereas in-browser\n\t\t\t// printing has to end one pixel before.\n\t\t\tpdfPageHeightOffset: -1,\n\n\t\t\t// Number of slides away from the current that are visible\n\t\t\tviewDistance: 3,\n\n\t\t\t// The display mode that will be used to show slides\n\t\t\tdisplay: 'block',\n\n\t\t\t// Script dependencies to load\n\t\t\tdependencies: []\n\n\t\t},\n\n\t\t// Flags if Reveal.initialize() has been called\n\t\tinitialized = false,\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tloaded = false,\n\n\t\t// Flags if the overview mode is currently active\n\t\toverview = false,\n\n\t\t// Holds the dimensions of our overview slides, including margins\n\t\toverviewSlideWidth = null,\n\t\toverviewSlideHeight = null,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\tpreviousBackground,\n\n\t\t// Slides may hold a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Features supported by the browser, see #checkCapabilities()\n\t\tfeatures = {},\n\n\t\t// Client is a mobile device, see #checkCapabilities()\n\t\tisMobileDevice,\n\n\t\t// Client is a desktop Chrome, see #checkCapabilities()\n\t\tisChrome,\n\n\t\t// Throttles mouse wheel navigation\n\t\tlastMouseWheelStep = 0,\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\twriteURLTimeout = 0,\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Holds information about the currently ongoing touch input\n\t\ttouch = {\n\t\t\tstartX: 0,\n\t\t\tstartY: 0,\n\t\t\tstartSpan: 0,\n\t\t\tstartCount: 0,\n\t\t\tcaptured: false,\n\t\t\tthreshold: 40\n\t\t},\n\n\t\t// Holds information about the keyboard shortcuts\n\t\tkeyboardShortcuts = {\n\t\t\t'N  ,  SPACE':\t\t\t'Next slide',\n\t\t\t'P':\t\t\t\t\t'Previous slide',\n\t\t\t'&#8592;  ,  H':\t\t'Navigate left',\n\t\t\t'&#8594;  ,  L':\t\t'Navigate right',\n\t\t\t'&#8593;  ,  K':\t\t'Navigate up',\n\t\t\t'&#8595;  ,  J':\t\t'Navigate down',\n\t\t\t'Home':\t\t\t\t\t'First slide',\n\t\t\t'End':\t\t\t\t\t'Last slide',\n\t\t\t'B  ,  .':\t\t\t\t'Pause',\n\t\t\t'F':\t\t\t\t\t'Fullscreen',\n\t\t\t'ESC, O':\t\t\t\t'Slide overview'\n\t\t};\n\n\t/**\n\t * Starts up the presentation if the client is capable.\n\t */\n\tfunction initialize( options ) {\n\n\t\t// Make sure we only initialize once\n\t\tif( initialized === true ) return;\n\n\t\tinitialized = true;\n\n\t\tcheckCapabilities();\n\n\t\tif( !features.transforms2d && !features.transforms3d ) {\n\t\t\tdocument.body.setAttribute( 'class', 'no-transforms' );\n\n\t\t\t// Since JS won't be running any further, we load all lazy\n\t\t\t// loading elements upfront\n\t\t\tvar images = toArray( document.getElementsByTagName( 'img' ) ),\n\t\t\t\tiframes = toArray( document.getElementsByTagName( 'iframe' ) );\n\n\t\t\tvar lazyLoadable = images.concat( iframes );\n\n\t\t\tfor( var i = 0, len = lazyLoadable.length; i < len; i++ ) {\n\t\t\t\tvar element = lazyLoadable[i];\n\t\t\t\tif( element.getAttribute( 'data-src' ) ) {\n\t\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the browser doesn't support core features we won't be\n\t\t\t// using JavaScript to control the presentation\n\t\t\treturn;\n\t\t}\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = document.querySelector( '.reveal' );\n\t\tdom.slides = document.querySelector( '.reveal .slides' );\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\tvar query = Reveal.getQueryHash();\n\n\t\t// Do not accept new dependencies via query config to avoid\n\t\t// the potential of malicious script injection\n\t\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\t\t// Copy options over to our config object\n\t\textend( config, options );\n\t\textend( config, query );\n\n\t\t// Hide the address bar in mobile browsers\n\t\thideAddressBar();\n\n\t\t// Loads the dependencies and continues to #start() once done\n\t\tload();\n\n\t}\n\n\t/**\n\t * Inspect the client to see what it's capable of, this\n\t * should only happens once per runtime.\n\t */\n\tfunction checkCapabilities() {\n\n\t\tisMobileDevice = /(iphone|ipod|ipad|android)/gi.test( UA );\n\t\tisChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\n\t\tvar testElement = document.createElement( 'div' );\n\n\t\tfeatures.transforms3d = 'WebkitPerspective' in testElement.style ||\n\t\t\t\t\t\t\t\t'MozPerspective' in testElement.style ||\n\t\t\t\t\t\t\t\t'msPerspective' in testElement.style ||\n\t\t\t\t\t\t\t\t'OPerspective' in testElement.style ||\n\t\t\t\t\t\t\t\t'perspective' in testElement.style;\n\n\t\tfeatures.transforms2d = 'WebkitTransform' in testElement.style ||\n\t\t\t\t\t\t\t\t'MozTransform' in testElement.style ||\n\t\t\t\t\t\t\t\t'msTransform' in testElement.style ||\n\t\t\t\t\t\t\t\t'OTransform' in testElement.style ||\n\t\t\t\t\t\t\t\t'transform' in testElement.style;\n\n\t\tfeatures.requestAnimationFrameMethod = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n\t\tfeatures.requestAnimationFrame = typeof features.requestAnimationFrameMethod === 'function';\n\n\t\tfeatures.canvas = !!document.createElement( 'canvas' ).getContext;\n\n\t\t// Transitions in the overview are disabled in desktop and\n\t\t// Safari due to lag\n\t\tfeatures.overviewTransitions = !/Version\\/[\\d\\.]+.*Safari/.test( UA );\n\n\t\t// Flags if we should use zoom instead of transform to scale\n\t\t// up slides. Zoom produces crisper results but has a lot of\n\t\t// xbrowser quirks so we only use it in whitelsited browsers.\n\t\tfeatures.zoom = 'zoom' in testElement.style && !isMobileDevice &&\n\t\t\t\t\t\t( isChrome || /Version\\/[\\d\\.]+.*Safari/.test( UA ) );\n\n\t}\n\n    /**\n     * Loads the dependencies of reveal.js. Dependencies are\n     * defined via the configuration option 'dependencies'\n     * and will be loaded prior to starting/binding reveal.js.\n     * Some dependencies may have an 'async' flag, if so they\n     * will load after reveal.js has been started up.\n     */\n\tfunction load() {\n\n\t\tvar scripts = [],\n\t\t\tscriptsAsync = [],\n\t\t\tscriptsToPreload = 0;\n\n\t\t// Called once synchronous scripts finish loading\n\t\tfunction proceed() {\n\t\t\tif( scriptsAsync.length ) {\n\t\t\t\t// Load asynchronous scripts\n\t\t\t\thead.js.apply( null, scriptsAsync );\n\t\t\t}\n\n\t\t\tstart();\n\t\t}\n\n\t\tfunction loadScript( s ) {\n\t\t\thead.ready( s.src.match( /([\\w\\d_\\-]*)\\.?js$|[^\\\\\\/]*$/i )[0], function() {\n\t\t\t\t// Extension may contain callback functions\n\t\t\t\tif( typeof s.callback === 'function' ) {\n\t\t\t\t\ts.callback.apply( this );\n\t\t\t\t}\n\n\t\t\t\tif( --scriptsToPreload === 0 ) {\n\t\t\t\t\tproceed();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor( var i = 0, len = config.dependencies.length; i < len; i++ ) {\n\t\t\tvar s = config.dependencies[i];\n\n\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\tif( s.async ) {\n\t\t\t\t\tscriptsAsync.push( s.src );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tscripts.push( s.src );\n\t\t\t\t}\n\n\t\t\t\tloadScript( s );\n\t\t\t}\n\t\t}\n\n\t\tif( scripts.length ) {\n\t\t\tscriptsToPreload = scripts.length;\n\n\t\t\t// Load synchronous scripts\n\t\t\thead.js.apply( null, scripts );\n\t\t}\n\t\telse {\n\t\t\tproceed();\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\treadURL();\n\n\t\t// Update all backgrounds\n\t\tupdateBackground( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( function() {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tloaded = true;\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent( 'ready', {\n\t\t\t\t'indexh': indexh,\n\t\t\t\t'indexv': indexv,\n\t\t\t\t'currentSlide': currentSlide\n\t\t\t} );\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tsetupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', setupPDF );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\t// Background element\n\t\tdom.background = createSingletonNode( dom.wrapper, 'div', 'backgrounds', null );\n\n\t\t// Progress bar\n\t\tdom.progress = createSingletonNode( dom.wrapper, 'div', 'progress', '<span></span>' );\n\t\tdom.progressbar = dom.progress.querySelector( 'span' );\n\n\t\t// Arrow controls\n\t\tcreateSingletonNode( dom.wrapper, 'aside', 'controls',\n\t\t\t'<button class=\"navigate-left\" aria-label=\"previous slide\"></button>' +\n\t\t\t'<button class=\"navigate-right\" aria-label=\"next slide\"></button>' +\n\t\t\t'<button class=\"navigate-up\" aria-label=\"above slide\"></button>' +\n\t\t\t'<button class=\"navigate-down\" aria-label=\"below slide\"></button>' );\n\n\t\t// Slide number\n\t\tdom.slideNumber = createSingletonNode( dom.wrapper, 'div', 'slide-number', '' );\n\n\t\t// Element containing notes that are visible to the audience\n\t\tdom.speakerNotes = createSingletonNode( dom.wrapper, 'div', 'speaker-notes', null );\n\t\tdom.speakerNotes.setAttribute( 'data-prevent-swipe', '' );\n\t\tdom.speakerNotes.setAttribute( 'tabindex', '0' );\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tcreateSingletonNode( dom.wrapper, 'div', 'pause-overlay', null );\n\n\t\t// Cache references to elements\n\t\tdom.controls = document.querySelector( '.reveal .controls' );\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tdom.controlsLeft = toArray( document.querySelectorAll( '.navigate-left' ) );\n\t\tdom.controlsRight = toArray( document.querySelectorAll( '.navigate-right' ) );\n\t\tdom.controlsUp = toArray( document.querySelectorAll( '.navigate-up' ) );\n\t\tdom.controlsDown = toArray( document.querySelectorAll( '.navigate-down' ) );\n\t\tdom.controlsPrev = toArray( document.querySelectorAll( '.navigate-prev' ) );\n\t\tdom.controlsNext = toArray( document.querySelectorAll( '.navigate-next' ) );\n\n\t\tdom.statusDiv = createStatusDiv();\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusDiv() {\n\n\t\tvar statusDiv = document.getElementById( 'aria-status-div' );\n\t\tif( !statusDiv ) {\n\t\t\tstatusDiv = document.createElement( 'div' );\n\t\t\tstatusDiv.style.position = 'absolute';\n\t\t\tstatusDiv.style.height = '1px';\n\t\t\tstatusDiv.style.width = '1px';\n\t\t\tstatusDiv.style.overflow = 'hidden';\n\t\t\tstatusDiv.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusDiv.setAttribute( 'id', 'aria-status-div' );\n\t\t\tstatusDiv.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusDiv.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusDiv );\n\t\t}\n\t\treturn statusDiv;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tvar text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tvar isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tvar isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\ttoArray( node.childNodes ).forEach( function( child ) {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn text;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tfunction setupPDF() {\n\n\t\tvar slideSize = getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tvar pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tvar slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\t// Let the browser know what page size we want to print\n\t\tinjectStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tinjectStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.body.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\t// Make sure stretch elements fit on slide\n\t\tlayoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Add each slide's index as attributes on itself, we need these\n\t\t// indices to generate slide numbers below\n\t\ttoArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ).forEach( function( hslide, h ) {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\t\t\t\ttoArray( hslide.querySelectorAll( 'section' ) ).forEach( function( vslide, v ) {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Slide and slide background layout\n\t\ttoArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( function( slide ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tvar left = ( pageWidth - slideWidth ) / 2,\n\t\t\t\t\ttop = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tvar contentHeight = slide.scrollHeight;\n\t\t\t\tvar numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tvar page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\t\t\t\tslide.parentNode.insertBefore( page, slide );\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tvar notes = getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tvar notesSpacing = 8;\n\t\t\t\t\t\tvar notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tvar notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpage.parentNode.insertBefore( notesElement, page.nextSibling );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject slide numbers if `slideNumbers` are enabled\n\t\t\t\tif( config.slideNumber && /all|print/i.test( config.showSlideNumber ) ) {\n\t\t\t\t\tvar slideNumberH = parseInt( slide.getAttribute( 'data-index-h' ), 10 ) + 1,\n\t\t\t\t\t\tslideNumberV = parseInt( slide.getAttribute( 'data-index-v' ), 10 ) + 1;\n\n\t\t\t\t\tvar numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = formatSlideNumber( slideNumberH, '.', slideNumberV );\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\t\t\t}\n\n\t\t} );\n\n\t\t// Show all fragments\n\t\ttoArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR + ' .fragment' ) ).forEach( function( fragment ) {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t} );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tdispatchEvent( 'pdf-ready' );\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( function() {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * Creates an HTML element and returns a reference to it.\n\t * If the element already exists the existing instance will\n\t * be returned.\n\t *\n\t * @param {HTMLElement} container\n\t * @param {string} tagname\n\t * @param {string} classname\n\t * @param {string} innerHTML\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createSingletonNode( container, tagname, classname, innerHTML ) {\n\n\t\t// Find all nodes matching the description\n\t\tvar nodes = container.querySelectorAll( '.' + classname );\n\n\t\t// Check all matches to find one which is a direct child of\n\t\t// the specified container\n\t\tfor( var i = 0; i < nodes.length; i++ ) {\n\t\t\tvar testNode = nodes[i];\n\t\t\tif( testNode.parentNode === container ) {\n\t\t\t\treturn testNode;\n\t\t\t}\n\t\t}\n\n\t\t// If no node was found, create it now\n\t\tvar node = document.createElement( tagname );\n\t\tnode.classList.add( classname );\n\t\tif( typeof innerHTML === 'string' ) {\n\t\t\tnode.innerHTML = innerHTML;\n\t\t}\n\t\tcontainer.appendChild( node );\n\n\t\treturn node;\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tfunction createBackgrounds() {\n\n\t\tvar printMode = isPrintingPDF();\n\n\t\t// Clear prior backgrounds\n\t\tdom.background.innerHTML = '';\n\t\tdom.background.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\ttoArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ).forEach( function( slideh ) {\n\n\t\t\tvar backgroundStack = createBackground( slideh, dom.background );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\ttoArray( slideh.querySelectorAll( 'section' ) ).forEach( function( slidev ) {\n\n\t\t\t\tcreateBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( config.parallaxBackgroundImage ) {\n\n\t\t\tdom.background.style.backgroundImage = 'url(\"' + config.parallaxBackgroundImage + '\")';\n\t\t\tdom.background.style.backgroundSize = config.parallaxBackgroundSize;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( function() {\n\t\t\t\tdom.wrapper.classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tdom.background.style.backgroundImage = '';\n\t\t\tdom.wrapper.classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tfunction createBackground( slide, container ) {\n\n\t\tvar data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' )\n\t\t};\n\n\t\tvar element = document.createElement( 'div' );\n\n\t\t// Carry over custom classes from the slide to the background\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp)([?#]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundRepeat ) element.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) element.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tcontainer.appendChild( element );\n\n\t\t// If backgrounds are being recreated, clear old classes\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\tslide.slideBackgroundElement = element;\n\n\t\t// If this slide has a background color, add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be set\n\t\tvar computedBackgroundStyle = window.getComputedStyle( element );\n\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\tvar rgb = colorToRgb( computedBackgroundStyle.backgroundColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( computedBackgroundStyle.backgroundColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', function ( event ) {\n\t\t\t\tvar data = event.data;\n\n\t\t\t\t// Make sure we're dealing with JSON\n\t\t\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\t\t\tdata = JSON.parse( data );\n\n\t\t\t\t\t// Check if the requested method can be found\n\t\t\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\t\t\t\t\t\tReveal[data.method].apply( Reveal, data.args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tvar numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\tdom.wrapper.classList.remove( config.transition );\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) extend( config, options );\n\n\t\t// Force linear transition based on browser capabilities\n\t\tif( features.transforms3d === false ) config.transition = 'linear';\n\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\tdom.controls.style.display = config.controls ? 'block' : 'none';\n\t\tdom.progress.style.display = config.progress ? 'block' : 'none';\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tif( config.rtl ) {\n\t\t\tdom.wrapper.classList.add( 'rtl' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'rtl' );\n\t\t}\n\n\t\tif( config.center ) {\n\t\t\tdom.wrapper.classList.add( 'center' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'center' );\n\t\t}\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\tif( config.showNotes ) {\n\t\t\tdom.speakerNotes.classList.add( 'visible' );\n\t\t\tdom.speakerNotes.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\t\telse {\n\t\t\tdom.speakerNotes.classList.remove( 'visible' );\n\t\t}\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Rolling 3D links\n\t\tif( config.rollingLinks ) {\n\t\t\tenableRollingLinks();\n\t\t}\n\t\telse {\n\t\t\tdisableRollingLinks();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable && features.canvas && features.requestAnimationFrame ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, function() {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// When fragments are turned off they should be visible\n\t\tif( config.fragments === false ) {\n\t\t\ttoArray( dom.slides.querySelectorAll( '.fragment' ) ).forEach( function( element ) {\n\t\t\t\telement.classList.add( 'visible' );\n\t\t\t\telement.classList.remove( 'current-fragment' );\n\t\t\t} );\n\t\t}\n\n\t\t// Slide numbers\n\t\tvar slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tdom.slideNumber.style.display = slideNumberDisplay;\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'hashchange', onWindowHashChange, false );\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) {\n\t\t\tdom.wrapper.addEventListener( 'touchstart', onTouchStart, false );\n\t\t\tdom.wrapper.addEventListener( 'touchmove', onTouchMove, false );\n\t\t\tdom.wrapper.addEventListener( 'touchend', onTouchEnd, false );\n\n\t\t\t// Support pointer-style touch interaction as well\n\t\t\tif( window.navigator.pointerEnabled ) {\n\t\t\t\t// IE 11 uses un-prefixed version of pointer events\n\t\t\t\tdom.wrapper.addEventListener( 'pointerdown', onPointerDown, false );\n\t\t\t\tdom.wrapper.addEventListener( 'pointermove', onPointerMove, false );\n\t\t\t\tdom.wrapper.addEventListener( 'pointerup', onPointerUp, false );\n\t\t\t}\n\t\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\t\tdom.wrapper.addEventListener( 'MSPointerDown', onPointerDown, false );\n\t\t\t\tdom.wrapper.addEventListener( 'MSPointerMove', onPointerMove, false );\n\t\t\t\tdom.wrapper.addEventListener( 'MSPointerUp', onPointerUp, false );\n\t\t\t}\n\t\t}\n\n\t\tif( config.keyboard ) {\n\t\t\tdocument.addEventListener( 'keydown', onDocumentKeyDown, false );\n\t\t\tdocument.addEventListener( 'keypress', onDocumentKeyPress, false );\n\t\t}\n\n\t\tif( config.progress && dom.progress ) {\n\t\t\tdom.progress.addEventListener( 'click', onProgressClicked, false );\n\t\t}\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tvar visibilityChange;\n\n\t\t\tif( 'hidden' in document ) {\n\t\t\t\tvisibilityChange = 'visibilitychange';\n\t\t\t}\n\t\t\telse if( 'msHidden' in document ) {\n\t\t\t\tvisibilityChange = 'msvisibilitychange';\n\t\t\t}\n\t\t\telse if( 'webkitHidden' in document ) {\n\t\t\t\tvisibilityChange = 'webkitvisibilitychange';\n\t\t\t}\n\n\t\t\tif( visibilityChange ) {\n\t\t\t\tdocument.addEventListener( visibilityChange, onPageVisibilityChange, false );\n\t\t\t}\n\t\t}\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tvar pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( UA.match( /android/gi ) ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( function( eventName ) {\n\t\t\tdom.controlsLeft.forEach( function( el ) { el.addEventListener( eventName, onNavigateLeftClicked, false ); } );\n\t\t\tdom.controlsRight.forEach( function( el ) { el.addEventListener( eventName, onNavigateRightClicked, false ); } );\n\t\t\tdom.controlsUp.forEach( function( el ) { el.addEventListener( eventName, onNavigateUpClicked, false ); } );\n\t\t\tdom.controlsDown.forEach( function( el ) { el.addEventListener( eventName, onNavigateDownClicked, false ); } );\n\t\t\tdom.controlsPrev.forEach( function( el ) { el.addEventListener( eventName, onNavigatePrevClicked, false ); } );\n\t\t\tdom.controlsNext.forEach( function( el ) { el.addEventListener( eventName, onNavigateNextClicked, false ); } );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\tdocument.removeEventListener( 'keydown', onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', onDocumentKeyPress, false );\n\t\twindow.removeEventListener( 'hashchange', onWindowHashChange, false );\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.wrapper.removeEventListener( 'touchstart', onTouchStart, false );\n\t\tdom.wrapper.removeEventListener( 'touchmove', onTouchMove, false );\n\t\tdom.wrapper.removeEventListener( 'touchend', onTouchEnd, false );\n\n\t\t// IE11\n\t\tif( window.navigator.pointerEnabled ) {\n\t\t\tdom.wrapper.removeEventListener( 'pointerdown', onPointerDown, false );\n\t\t\tdom.wrapper.removeEventListener( 'pointermove', onPointerMove, false );\n\t\t\tdom.wrapper.removeEventListener( 'pointerup', onPointerUp, false );\n\t\t}\n\t\t// IE10\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\tdom.wrapper.removeEventListener( 'MSPointerDown', onPointerDown, false );\n\t\t\tdom.wrapper.removeEventListener( 'MSPointerMove', onPointerMove, false );\n\t\t\tdom.wrapper.removeEventListener( 'MSPointerUp', onPointerUp, false );\n\t\t}\n\n\t\tif ( config.progress && dom.progress ) {\n\t\t\tdom.progress.removeEventListener( 'click', onProgressClicked, false );\n\t\t}\n\n\t\t[ 'touchstart', 'click' ].forEach( function( eventName ) {\n\t\t\tdom.controlsLeft.forEach( function( el ) { el.removeEventListener( eventName, onNavigateLeftClicked, false ); } );\n\t\t\tdom.controlsRight.forEach( function( el ) { el.removeEventListener( eventName, onNavigateRightClicked, false ); } );\n\t\t\tdom.controlsUp.forEach( function( el ) { el.removeEventListener( eventName, onNavigateUpClicked, false ); } );\n\t\t\tdom.controlsDown.forEach( function( el ) { el.removeEventListener( eventName, onNavigateDownClicked, false ); } );\n\t\t\tdom.controlsPrev.forEach( function( el ) { el.removeEventListener( eventName, onNavigatePrevClicked, false ); } );\n\t\t\tdom.controlsNext.forEach( function( el ) { el.removeEventListener( eventName, onNavigateNextClicked, false ); } );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Extend object a with the properties of object b.\n\t * If there's a conflict, object b takes precedence.\n\t *\n\t * @param {object} a\n\t * @param {object} b\n\t */\n\tfunction extend( a, b ) {\n\n\t\tfor( var i in b ) {\n\t\t\ta[ i ] = b[ i ];\n\t\t}\n\n\t}\n\n\t/**\n\t * Converts the target object to an array.\n\t *\n\t * @param {object} o\n\t * @return {object[]}\n\t */\n\tfunction toArray( o ) {\n\n\t\treturn Array.prototype.slice.call( o );\n\n\t}\n\n\t/**\n\t * Utility for deserializing a value.\n\t *\n\t * @param {*} value\n\t * @return {*}\n\t */\n\tfunction deserialize( value ) {\n\n\t\tif( typeof value === 'string' ) {\n\t\t\tif( value === 'null' ) return null;\n\t\t\telse if( value === 'true' ) return true;\n\t\t\telse if( value === 'false' ) return false;\n\t\t\telse if( value.match( /^[\\d\\.]+$/ ) ) return parseFloat( value );\n\t\t}\n\n\t\treturn value;\n\n\t}\n\n\t/**\n\t * Measures the distance in pixels between point a\n\t * and point b.\n\t *\n\t * @param {object} a point with x/y properties\n\t * @param {object} b point with x/y properties\n\t *\n\t * @return {number}\n\t */\n\tfunction distanceBetween( a, b ) {\n\n\t\tvar dx = a.x - b.x,\n\t\t\tdy = a.y - b.y;\n\n\t\treturn Math.sqrt( dx*dx + dy*dy );\n\n\t}\n\n\t/**\n\t * Applies a CSS transform to the target element.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} transform\n\t */\n\tfunction transformElement( element, transform ) {\n\n\t\telement.style.WebkitTransform = transform;\n\t\telement.style.MozTransform = transform;\n\t\telement.style.msTransform = transform;\n\t\telement.style.transform = transform;\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\ttransformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\ttransformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Injects the given CSS styles into the DOM.\n\t *\n\t * @param {string} value\n\t */\n\tfunction injectStyleSheet( value ) {\n\n\t\tvar tag = document.createElement( 'style' );\n\t\ttag.type = 'text/css';\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t\tdocument.getElementsByTagName( 'head' )[0].appendChild( tag );\n\n\t}\n\n\t/**\n\t * Find the closest parent that matches the given\n\t * selector.\n\t *\n\t * @param {HTMLElement} target The child element\n\t * @param {String} selector The CSS selector to match\n\t * the parents against\n\t *\n\t * @return {HTMLElement} The matched parent or null\n\t * if no matching parent was found\n\t */\n\tfunction closestParent( target, selector ) {\n\n\t\tvar parent = target.parentNode;\n\n\t\twhile( parent ) {\n\n\t\t\t// There's some overhead doing this each time, we don't\n\t\t\t// want to rewrite the element prototype but should still\n\t\t\t// be enough to feature detect once at startup...\n\t\t\tvar matchesMethod = parent.matches || parent.matchesSelector || parent.msMatchesSelector;\n\n\t\t\t// If we find a match, we're all set\n\t\t\tif( matchesMethod && matchesMethod.call( parent, selector ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\t// Keep searching\n\t\t\tparent = parent.parentNode;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Converts various color input formats to an {r:0,g:0,b:0} object.\n\t *\n\t * @param {string} color The string representation of a color\n\t * @example\n\t * colorToRgb('#000');\n\t * @example\n\t * colorToRgb('#000000');\n\t * @example\n\t * colorToRgb('rgb(0,0,0)');\n\t * @example\n\t * colorToRgb('rgba(0,0,0)');\n\t *\n\t * @return {{r: number, g: number, b: number, [a]: number}|null}\n\t */\n\tfunction colorToRgb( color ) {\n\n\t\tvar hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\t\tif( hex3 && hex3[1] ) {\n\t\t\thex3 = hex3[1];\n\t\t\treturn {\n\t\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t\t};\n\t\t}\n\n\t\tvar hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\t\tif( hex6 && hex6[1] ) {\n\t\t\thex6 = hex6[1];\n\t\t\treturn {\n\t\t\t\tr: parseInt( hex6.substr( 0, 2 ), 16 ),\n\t\t\t\tg: parseInt( hex6.substr( 2, 2 ), 16 ),\n\t\t\t\tb: parseInt( hex6.substr( 4, 2 ), 16 )\n\t\t\t};\n\t\t}\n\n\t\tvar rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\t\tif( rgb ) {\n\t\t\treturn {\n\t\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\t\tb: parseInt( rgb[3], 10 )\n\t\t\t};\n\t\t}\n\n\t\tvar rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\t\tif( rgba ) {\n\t\t\treturn {\n\t\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\t\ta: parseFloat( rgba[4] )\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Calculates brightness on a scale of 0-255.\n\t *\n\t * @param {string} color See colorToRgb for supported formats.\n\t * @see {@link colorToRgb}\n\t */\n\tfunction colorBrightness( color ) {\n\n\t\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\t\tif( color ) {\n\t\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Returns the remaining height within the parent of the\n\t * target element.\n\t *\n\t * remaining height = [ configured parent height ] - [ current parent height ]\n\t *\n\t * @param {HTMLElement} element\n\t * @param {number} [height]\n\t */\n\tfunction getRemainingHeight( element, height ) {\n\n\t\theight = height || 0;\n\n\t\tif( element ) {\n\t\t\tvar newHeight, oldHeight = element.style.height;\n\n\t\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t\t// the other elements\n\t\t\telement.style.height = '0px';\n\t\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t\t// Restore the old height, just in case\n\t\t\telement.style.height = oldHeight + 'px';\n\n\t\t\treturn newHeight;\n\t\t}\n\n\t\treturn height;\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tfunction isPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n\t/**\n\t * Hides the address bar if we're on a mobile device.\n\t */\n\tfunction hideAddressBar() {\n\n\t\tif( config.hideAddressBar && isMobileDevice ) {\n\t\t\t// Events that should trigger the address bar to hide\n\t\t\twindow.addEventListener( 'load', removeAddressBar, false );\n\t\t\twindow.addEventListener( 'orientationchange', removeAddressBar, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Causes the address bar to hide on mobile devices,\n\t * more vertical space ftw.\n\t */\n\tfunction removeAddressBar() {\n\n\t\tsetTimeout( function() {\n\t\t\twindow.scrollTo( 0, 1 );\n\t\t}, 10 );\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent( type, args ) {\n\n\t\tvar event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, true, true );\n\t\textend( event, args );\n\t\tdom.wrapper.dispatchEvent( event );\n\n\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t// parent window. Used by the notes plugin\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\twindow.parent.postMessage( JSON.stringify({ namespace: 'reveal', eventName: type, state: getState() }), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Wrap all links in 3D goodness.\n\t */\n\tfunction enableRollingLinks() {\n\n\t\tif( features.transforms3d && !( 'msPerspective' in document.body.style ) ) {\n\t\t\tvar anchors = dom.wrapper.querySelectorAll( SLIDES_SELECTOR + ' a' );\n\n\t\t\tfor( var i = 0, len = anchors.length; i < len; i++ ) {\n\t\t\t\tvar anchor = anchors[i];\n\n\t\t\t\tif( anchor.textContent && !anchor.querySelector( '*' ) && ( !anchor.className || !anchor.classList.contains( anchor, 'roll' ) ) ) {\n\t\t\t\t\tvar span = document.createElement('span');\n\t\t\t\t\tspan.setAttribute('data-title', anchor.text);\n\t\t\t\t\tspan.innerHTML = anchor.innerHTML;\n\n\t\t\t\t\tanchor.classList.add( 'roll' );\n\t\t\t\t\tanchor.innerHTML = '';\n\t\t\t\t\tanchor.appendChild(span);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Unwrap all 3D links.\n\t */\n\tfunction disableRollingLinks() {\n\n\t\tvar anchors = dom.wrapper.querySelectorAll( SLIDES_SELECTOR + ' a.roll' );\n\n\t\tfor( var i = 0, len = anchors.length; i < len; i++ ) {\n\t\t\tvar anchor = anchors[i];\n\t\t\tvar span = anchor.querySelector( 'span' );\n\n\t\t\tif( span ) {\n\t\t\t\tanchor.classList.remove( 'roll' );\n\t\t\t\tanchor.innerHTML = span.innerHTML;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector ) {\n\n\t\tvar anchors = toArray( document.querySelectorAll( selector ? selector : 'a' ) );\n\n\t\tanchors.forEach( function( element ) {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector ) {\n\n\t\tvar anchors = toArray( document.querySelectorAll( selector ? selector : 'a' ) );\n\n\t\tanchors.forEach( function( element ) {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML = [\n\t\t\t'<header>',\n\t\t\t\t'<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>',\n\t\t\t\t'<a class=\"external\" href=\"'+ url +'\" target=\"_blank\"><span class=\"icon\"></span></a>',\n\t\t\t'</header>',\n\t\t\t'<div class=\"spinner\"></div>',\n\t\t\t'<div class=\"viewport\">',\n\t\t\t\t'<iframe src=\"'+ url +'\"></iframe>',\n\t\t\t\t'<small class=\"viewport-inner\">',\n\t\t\t\t\t'<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site\\'s policy (x-frame-options).</span>',\n\t\t\t\t'</small>',\n\t\t\t'</div>'\n\t\t].join('');\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', function( event ) {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', function( event ) {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', function( event ) {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t\tsetTimeout( function() {\n\t\t\tdom.overlay.classList.add( 'visible' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tvar html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( var key in keyboardShortcuts ) {\n\t\t\t\thtml += '<tr><td>' + key + '</td><td>' + keyboardShortcuts[ key ] + '</td></tr>';\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = [\n\t\t\t\t'<header>',\n\t\t\t\t\t'<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>',\n\t\t\t\t'</header>',\n\t\t\t\t'<div class=\"viewport\">',\n\t\t\t\t\t'<div class=\"viewport-inner\">'+ html +'</div>',\n\t\t\t\t'</div>'\n\t\t\t].join('');\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', function( event ) {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t\tsetTimeout( function() {\n\t\t\t\tdom.overlay.classList.add( 'visible' );\n\t\t\t}, 1 );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !isPrintingPDF() ) {\n\n\t\t\tvar size = getComputedSlideSize();\n\n\t\t\t// Layout the contents of the slides\n\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t// Determine scale of content to fit within available space\n\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t// Respect max/min scale settings\n\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\tif( scale === 1 ) {\n\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\tdom.slides.style.left = '';\n\t\t\t\tdom.slides.style.top = '';\n\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\tdom.slides.style.right = '';\n\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Prefer zoom for scaling up so that content remains crisp.\n\t\t\t\t// Don't use zoom to scale down since that can lead to shifts\n\t\t\t\t// in text layout/line breaks.\n\t\t\t\tif( scale > 1 && features.zoom ) {\n\t\t\t\t\tdom.slides.style.zoom = scale;\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\t// Apply scale transform as a fallback\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Select all slides, vertical and horizontal\n\t\t\tvar slides = toArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\tfor( var i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\tvar slide = slides[ i ];\n\n\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t// children will be\n\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.style.top = '';\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tupdateProgress();\n\t\t\tupdateParallax();\n\n\t\t\tif( isOverview() ) {\n\t\t\t\tupdateOverview();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'stretch' class\n\t\ttoArray( dom.slides.querySelectorAll( 'section > .stretch' ) ).forEach( function( element ) {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tvar remainingHeight = getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tvar nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\tnh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tvar es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tvar size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tvar attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tfunction activateOverview() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( config.overview && !isOverview() ) {\n\n\t\t\toverview = true;\n\n\t\t\tdom.wrapper.classList.add( 'overview' );\n\t\t\tdom.wrapper.classList.remove( 'overview-deactivating' );\n\n\t\t\tif( features.overviewTransitions ) {\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\tdom.wrapper.classList.add( 'overview-animated' );\n\t\t\t\t}, 1 );\n\t\t\t}\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tcancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tdom.slides.appendChild( dom.background );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\ttoArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( function( slide ) {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', onOverviewSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tvar margin = 70;\n\t\t\tvar slideSize = getComputedSlideSize();\n\t\t\toverviewSlideWidth = slideSize.width + margin;\n\t\t\toverviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( config.rtl ) {\n\t\t\t\toverviewSlideWidth = -overviewSlideWidth;\n\t\t\t}\n\n\t\t\tupdateSlidesVisibility();\n\t\t\tlayoutOverview();\n\t\t\tupdateOverview();\n\n\t\t\tlayout();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tdispatchEvent( 'overviewshown', {\n\t\t\t\t'indexh': indexh,\n\t\t\t\t'indexv': indexv,\n\t\t\t\t'currentSlide': currentSlide\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tfunction layoutOverview() {\n\n\t\t// Layout slides\n\t\ttoArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ).forEach( function( hslide, h ) {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\ttoArray( hslide.querySelectorAll( 'section' ) ).forEach( function( vslide, v ) {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\ttoArray( dom.background.childNodes ).forEach( function( hbackground, h ) {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\ttoArray( hbackground.querySelectorAll( '.slide-background' ) ).forEach( function( vbackground, v ) {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tfunction updateOverview() {\n\n\t\tvar vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tvar scale = Math.max( vmin / 5, 150 ) / vmin;\n\n\t\ttransformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indexh * overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indexv * overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tfunction deactivateOverview() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( config.overview ) {\n\n\t\t\toverview = false;\n\n\t\t\tdom.wrapper.classList.remove( 'overview' );\n\t\t\tdom.wrapper.classList.remove( 'overview-animated' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tdom.wrapper.classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( function () {\n\t\t\t\tdom.wrapper.classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tdom.wrapper.appendChild( dom.background );\n\n\t\t\t// Clean up changes made to slides\n\t\t\ttoArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( function( slide ) {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', onOverviewSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\ttoArray( dom.background.querySelectorAll( '.slide-background' ) ).forEach( function( background ) {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\ttransformSlides( { overview: '' } );\n\n\t\t\tslide( indexh, indexv );\n\n\t\t\tlayout();\n\n\t\t\tcueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tdispatchEvent( 'overviewhidden', {\n\t\t\t\t'indexh': indexh,\n\t\t\t\t'indexv': indexv,\n\t\t\t\t'currentSlide': currentSlide\n\t\t\t} );\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\tfunction toggleOverview( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? activateOverview() : deactivateOverview();\n\t\t}\n\t\telse {\n\t\t\tisOverview() ? deactivateOverview() : activateOverview();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tfunction isOverview() {\n\n\t\treturn overview;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide ) {\n\n\t\t// Prefer slide argument, otherwise use current slide\n\t\tslide = slide ? slide : currentSlide;\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Handling the fullscreen functionality via the fullscreen API\n\t *\n\t * @see http://fullscreen.spec.whatwg.org/\n\t * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n\t */\n\tfunction enterFullscreen() {\n\n\t\tvar element = document.documentElement;\n\n\t\t// Check which implementation is available\n\t\tvar requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\t\telement.msRequestFullscreen;\n\n\t\tif( requestMethod ) {\n\t\t\trequestMethod.apply( element );\n\t\t}\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tvar wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent( 'paused' );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tvar wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent( 'resumed' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [o] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, o ) {\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tvar horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !isOverview() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tvar stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tvar indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Apply the new state\n\t\tstateLoop: for( var i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( var j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdocument.documentElement.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent( state[i] );\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdocument.documentElement.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\t// Update the overview if it's currently active\n\t\tif( isOverview() ) {\n\t\t\tupdateOverview();\n\t\t}\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tvar currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tnavigateFragment( f );\n\t\t}\n\n\t\t// Dispatch an event if the slide changed\n\t\tvar slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent( 'slidechanged', {\n\t\t\t\t'indexh': indexh,\n\t\t\t\t'indexv': indexv,\n\t\t\t\t'previousSlide': previousSlide,\n\t\t\t\t'currentSlide': currentSlide,\n\t\t\t\t'origin': o\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t// Ensure that the previous slide is never the same as the current\n\t\t\tpreviousSlide = null;\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\t// Issue: #285\n\t\t\tif ( dom.wrapper.querySelector( HOME_SLIDE_SELECTOR ).classList.contains( 'present' ) ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\tvar slides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR + '.stack') ), i;\n\t\t\t\t\tfor( i in slides ) {\n\t\t\t\t\t\tif( slides[i] ) {\n\t\t\t\t\t\t\t// Reset stack\n\t\t\t\t\t\t\tsetPreviousVerticalIndex( slides[i], 0 );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tstopEmbeddedContent( previousSlide );\n\t\t\tstartEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents, for screen readers\n\t\tdom.statusDiv.textContent = getStatusText( currentSlide );\n\n\t\tupdateControls();\n\t\tupdateProgress();\n\t\tupdateBackground();\n\t\tupdateParallax();\n\t\tupdateSlideNumber();\n\t\tupdateNotes();\n\n\t\t// Update the URL hash\n\t\twriteURL();\n\n\t\tcueAutoSlide();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create the slide backgrounds\n\t\tcreateBackgrounds();\n\n\t\t// Write the current hash to the URL\n\t\twriteURL();\n\n\t\tsortAllFragments();\n\n\t\tupdateControls();\n\t\tupdateProgress();\n\t\tupdateSlideNumber();\n\t\tupdateSlidesVisibility();\n\t\tupdateBackground( true );\n\t\tupdateNotes();\n\n\t\tformatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tstopEmbeddedContent( currentSlide );\n\t\t}\n\t\telse {\n\t\t\tstartEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( isOverview() ) {\n\t\t\tlayoutOverview();\n\t\t}\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\t\thorizontalSlides.forEach( function( horizontalSlide ) {\n\n\t\t\tvar verticalSlides = toArray( horizontalSlide.querySelectorAll( 'section' ) );\n\t\t\tverticalSlides.forEach( function( verticalSlide, y ) {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tfunction sortAllFragments() {\n\n\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\t\thorizontalSlides.forEach( function( horizontalSlide ) {\n\n\t\t\tvar verticalSlides = toArray( horizontalSlide.querySelectorAll( 'section' ) );\n\t\t\tverticalSlides.forEach( function( verticalSlide, y ) {\n\n\t\t\t\tsortFragments( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t} );\n\n\t\t\tif( verticalSlides.length === 0 ) sortFragments( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle() {\n\n\t\tvar slides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\n\t\tslides.forEach( function( slide ) {\n\n\t\t\t// Insert this slide next to another random slide. This may\n\t\t\t// cause the slide to insert before itself but that's fine.\n\t\t\tdom.slides.insertBefore( slide, slides[ Math.floor( Math.random() * slides.length ) ] );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tvar slides = toArray( dom.wrapper.querySelectorAll( selector ) ),\n\t\t\tslidesLength = slides.length;\n\n\t\tvar printMode = isPrintingPDF();\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( var i = 0; i < slidesLength; i++ ) {\n\t\t\t\tvar element = slides[i];\n\n\t\t\t\tvar reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\tvar pastFragments = toArray( element.querySelectorAll( '.fragment' ) );\n\n\t\t\t\t\t\t// Show all fragments on prior slides\n\t\t\t\t\t\twhile( pastFragments.length ) {\n\t\t\t\t\t\t\tvar pastFragment = pastFragments.pop();\n\t\t\t\t\t\t\tpastFragment.classList.add( 'visible' );\n\t\t\t\t\t\t\tpastFragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\tvar futureFragments = toArray( element.querySelectorAll( '.fragment.visible' ) );\n\n\t\t\t\t\t\t// No fragments in future slides should be visible ahead of time\n\t\t\t\t\t\twhile( futureFragments.length ) {\n\t\t\t\t\t\t\tvar futureFragment = futureFragments.pop();\n\t\t\t\t\t\t\tfutureFragment.classList.remove( 'visible' );\n\t\t\t\t\t\t\tfutureFragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Mark the current slide as present\n\t\t\tslides[index].classList.add( 'present' );\n\t\t\tslides[index].removeAttribute( 'hidden' );\n\t\t\tslides[index].removeAttribute( 'aria-hidden' );\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tvar slideState = slides[index].getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tvar viewDistance = isOverview() ? 10 : config.viewDistance;\n\n\t\t\t// Limit view distance on weaker devices\n\t\t\tif( isMobileDevice ) {\n\t\t\t\tviewDistance = isOverview() ? 6 : 2;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( var x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tvar horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tvar verticalSlides = toArray( horizontalSlide.querySelectorAll( 'section' ) ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tshowSlide( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thideSlide( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tvar oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( var y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tvar verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tshowSlide( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\thideSlide( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tfunction updateNotes() {\n\n\t\tif( config.showNotes && dom.speakerNotes && currentSlide && !isPrintingPDF() ) {\n\n\t\t\tdom.speakerNotes.innerHTML = getSlideNotes() || '';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tfunction updateProgress() {\n\n\t\t// Update progress if enabled\n\t\tif( config.progress && dom.progressbar ) {\n\n\t\t\tdom.progressbar.style.width = getProgress() * dom.wrapper.offsetWidth + 'px';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the slide number div to reflect the current slide.\n\t *\n\t * The following slide number formats are available:\n\t *  \"h.v\":\thorizontal . vertical slide number (default)\n\t *  \"h/v\":\thorizontal / vertical slide number\n\t *    \"c\":\tflattened slide number\n\t *  \"c/t\":\tflattened slide number / total slides\n\t */\n\tfunction updateSlideNumber() {\n\n\t\t// Update slide number if enabled\n\t\tif( config.slideNumber && dom.slideNumber ) {\n\n\t\t\tvar value = [];\n\t\t\tvar format = 'h.v';\n\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( getSlidePastCount() + 1 );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( getSlidePastCount() + 1, '/', getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'h/v':\n\t\t\t\t\tvalue.push( indexh + 1 );\n\t\t\t\t\tif( isVerticalSlide() ) value.push( '/', indexv + 1 );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvalue.push( indexh + 1 );\n\t\t\t\t\tif( isVerticalSlide() ) value.push( '.', indexv + 1 );\n\t\t\t}\n\n\t\t\tdom.slideNumber.innerHTML = formatSlideNumber( value[0], value[1], value[2] );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @return {string} HTML string fragment\n\t */\n\tfunction formatSlideNumber( a, delimiter, b ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  '<span class=\"slide-number-a\">'+ a +'</span>' +\n\t\t\t\t\t'<span class=\"slide-number-delimiter\">'+ delimiter +'</span>' +\n\t\t\t\t\t'<span class=\"slide-number-b\">'+ b +'</span>';\n\t\t}\n\t\telse {\n\t\t\treturn '<span class=\"slide-number-a\">'+ a +'</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tfunction updateControls() {\n\n\t\tvar routes = availableRoutes();\n\t\tvar fragments = availableFragments();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\tdom.controlsLeft.concat( dom.controlsRight )\n\t\t\t\t\t\t.concat( dom.controlsUp )\n\t\t\t\t\t\t.concat( dom.controlsDown )\n\t\t\t\t\t\t.concat( dom.controlsPrev )\n\t\t\t\t\t\t.concat( dom.controlsNext ).forEach( function( node ) {\n\t\t\tnode.classList.remove( 'enabled' );\n\t\t\tnode.classList.remove( 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) dom.controlsLeft.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) dom.controlsRight.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) dom.controlsUp.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) dom.controlsDown.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) dom.controlsPrev.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) dom.controlsNext.forEach( function( el ) { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tif( currentSlide ) {\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragments.prev ) dom.controlsPrev.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragments.next ) dom.controlsNext.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragments.prev ) dom.controlsUp.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragments.next ) dom.controlsDown.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragments.prev ) dom.controlsLeft.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragments.next ) dom.controlsRight.forEach( function( el ) { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tfunction updateBackground( includeAll ) {\n\n\t\tvar currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tvar horizontalPast = config.rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = config.rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\ttoArray( dom.background.childNodes ).forEach( function( backgroundh, h ) {\n\n\t\t\tbackgroundh.classList.remove( 'past' );\n\t\t\tbackgroundh.classList.remove( 'present' );\n\t\t\tbackgroundh.classList.remove( 'future' );\n\n\t\t\tif( h < indexh ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indexh ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indexh ) {\n\t\t\t\ttoArray( backgroundh.querySelectorAll( '.slide-background' ) ).forEach( function( backgroundv, v ) {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past' );\n\t\t\t\t\tbackgroundv.classList.remove( 'present' );\n\t\t\t\t\tbackgroundv.classList.remove( 'future' );\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indexh ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( previousBackground ) {\n\n\t\t\tstopEmbeddedContent( previousBackground );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tstartEmbeddedContent( currentBackground );\n\n\t\t\tvar backgroundImageURL = currentBackground.style.backgroundImage || '';\n\n\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\tcurrentBackground.style.backgroundImage = '';\n\t\t\t\twindow.getComputedStyle( currentBackground ).opacity;\n\t\t\t\tcurrentBackground.style.backgroundImage = backgroundImageURL;\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tvar previousBackgroundHash = previousBackground ? previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tvar currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== previousBackground ) {\n\t\t\t\tdom.background.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tpreviousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( function( classToBubble ) {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tdom.wrapper.classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.wrapper.classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( function() {\n\t\t\tdom.background.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tfunction updateParallax() {\n\n\t\tif( config.parallaxBackgroundImage ) {\n\n\t\t\tvar horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\t\tvar backgroundSize = dom.background.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tvar slideWidth = dom.background.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof config.parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = config.parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indexh * -1;\n\n\t\t\tvar slideHeight = dom.background.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof config.parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = config.parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indexv : 0;\n\n\t\t\tdom.background.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tfunction showSlide( slide ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = config.display;\n\n\t\t// Media elements with data-src attributes\n\t\ttoArray( slide.querySelectorAll( 'img[data-src], video[data-src], audio[data-src]' ) ).forEach( function( element ) {\n\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\telement.removeAttribute( 'data-src' );\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\ttoArray( slide.querySelectorAll( 'video, audio' ) ).forEach( function( media ) {\n\t\t\tvar sources = 0;\n\n\t\t\ttoArray( media.querySelectorAll( 'source[data-src]' ) ).forEach( function( source ) {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tvar indices = getIndices( slide );\n\t\tvar background = getSlideBackground( indices.h, indices.v );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tvar backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' ),\n\t\t\t\t\tbackgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\tbackground.style.backgroundImage = 'url('+ backgroundImage +')';\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !isSpeakerNotes() ) {\n\t\t\t\t\tvar video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Inline video playback works (at least in Mobile Safari) as\n\t\t\t\t\t// long as the video is muted and the `playsinline` attribute is\n\t\t\t\t\t// present\n\t\t\t\t\tif( isMobileDevice ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.autoplay = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( function( source ) {\n\t\t\t\t\t\tvideo.innerHTML += '<source src=\"'+ source +'\">';\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackground.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe ) {\n\t\t\t\t\tvar iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\n\t\t\t\t\t// Only load autoplaying content when the slide is shown to\n\t\t\t\t\t// avoid having it play in the background\n\t\t\t\t\tif( /autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tiframe.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackground.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Called when the given slide is moved outside of the\n\t * configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction hideSlide( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tvar indices = getIndices( slide );\n\t\tvar background = getSlideBackground( indices.h, indices.v );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes() {\n\n\t\tvar horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tvar routes = {\n\t\t\tleft: indexh > 0 || config.loop,\n\t\t\tright: indexh < horizontalSlides.length - 1 || config.loop,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tvar left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tfunction availableFragments() {\n\n\t\tif( currentSlide && config.fragments ) {\n\t\t\tvar fragments = currentSlide.querySelectorAll( '.fragment' );\n\t\t\tvar hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tfunction formatEmbeddedContent() {\n\n\t\tvar _appendParamToIframeSource = function( sourceAttribute, sourceURL, param ) {\n\t\t\ttoArray( dom.slides.querySelectorAll( 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ) ).forEach( function( el ) {\n\t\t\t\tvar src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tfunction startEmbeddedContent( element ) {\n\n\t\tif( element && !isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\ttoArray( element.querySelectorAll( 'img[src$=\".gif\"]' ) ).forEach( function( el ) {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\ttoArray( element.querySelectorAll( 'video, audio' ) ).forEach( function( el ) {\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tvar autoplay = config.autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closestParent( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tstartEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\ttoArray( element.querySelectorAll( 'iframe[src]' ) ).forEach( function( el ) {\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstartEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\ttoArray( element.querySelectorAll( 'iframe[data-src]' ) ).forEach( function( el ) {\n\t\t\t\tif( closestParent( el, '.fragment' ) && !closestParent( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tfunction startEmbeddedMedia( event ) {\n\n\t\tvar isAttachedToDOM = !!closestParent( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closestParent( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tfunction startEmbeddedIframe( event ) {\n\n\t\tvar iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tvar isAttachedToDOM = !!closestParent( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closestParent( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tvar autoplay = config.autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closestParent( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tfunction stopEmbeddedContent( element ) {\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\ttoArray( element.querySelectorAll( 'video, audio' ) ).forEach( function( el ) {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\ttoArray( element.querySelectorAll( 'iframe' ) ).forEach( function( el ) {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\ttoArray( element.querySelectorAll( 'iframe[src*=\"youtube.com/embed/\"]' ) ).forEach( function( el ) {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\ttoArray( element.querySelectorAll( 'iframe[src*=\"player.vimeo.com/\"]' ) ).forEach( function( el ) {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Lazy loading iframes\n\t\t\ttoArray( element.querySelectorAll( 'iframe[data-src]' ) ).forEach( function( el ) {\n\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount() {\n\n\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\n\t\t// The number of past slides\n\t\tvar pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( var i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tvar horizontalSlide = horizontalSlides[i];\n\t\t\tvar verticalSlides = toArray( horizontalSlide.querySelectorAll( 'section' ) );\n\n\t\t\tfor( var j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j].classList.contains( 'present' ) ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\tpastCount++;\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide.classList.contains( 'present' ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tvar totalCount = getTotalSlides();\n\t\tvar pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tvar allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tvar visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tvar fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount / ( totalCount - 1 );\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tfunction isSpeakerNotes() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\tfunction readURL() {\n\n\t\tvar hash = window.location.hash;\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tvar bits = hash.slice( 2 ).split( '/' ),\n\t\t\tname = hash.replace( /#|\\//gi, '' );\n\n\t\t// If the first bit is invalid and there is a name we can\n\t\t// assume that this is a named link\n\t\tif( isNaN( parseInt( bits[0], 10 ) ) && name.length ) {\n\t\t\tvar element;\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\tif( /^[a-zA-Z][\\w:.-]*$/.test( name ) ) {\n\t\t\t\t// Find the slide with the specified ID\n\t\t\t\telement = document.getElementById( name );\n\t\t\t}\n\n\t\t\tif( element ) {\n\t\t\t\t// Find the position of the named slide and navigate to it\n\t\t\t\tvar indices = Reveal.getIndices( element );\n\t\t\t\tslide( indices.h, indices.v );\n\t\t\t}\n\t\t\t// If the slide doesn't exist, navigate to the current slide\n\t\t\telse {\n\t\t\t\tslide( indexh || 0, indexv || 0 );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Read the index components of the hash\n\t\t\tvar h = parseInt( bits[0], 10 ) || 0,\n\t\t\t\tv = parseInt( bits[1], 10 ) || 0;\n\n\t\t\tif( h !== indexh || v !== indexv ) {\n\t\t\t\tslide( h, v );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\tfunction writeURL( delay ) {\n\n\t\tif( config.history ) {\n\n\t\t\t// Make sure there's never more than one timeout running\n\t\t\tclearTimeout( writeURLTimeout );\n\n\t\t\t// If a delay is specified, timeout this call\n\t\t\tif( typeof delay === 'number' ) {\n\t\t\t\twriteURLTimeout = setTimeout( writeURL, delay );\n\t\t\t}\n\t\t\telse if( currentSlide ) {\n\t\t\t\tvar url = '/';\n\n\t\t\t\t// Attempt to create a named link based on the slide's ID\n\t\t\t\tvar id = currentSlide.getAttribute( 'id' );\n\t\t\t\tif( id ) {\n\t\t\t\t\tid = id.replace( /[^a-zA-Z0-9\\-\\_\\:\\.]/g, '' );\n\t\t\t\t}\n\n\t\t\t\t// If the current slide has an ID, use that as a named link\n\t\t\t\tif( typeof id === 'string' && id.length ) {\n\t\t\t\t\turl = '/' + id;\n\t\t\t\t}\n\t\t\t\t// Otherwise use the /h/v index\n\t\t\t\telse {\n\t\t\t\t\tif( indexh > 0 || indexv > 0 ) url += indexh;\n\t\t\t\t\tif( indexv > 0 ) url += '/' + indexv;\n\t\t\t\t}\n\n\t\t\t\twindow.location.hash = url;\n\t\t\t}\n\t\t}\n\n\t}\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tvar h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tvar isVertical = isVerticalSlide( slide );\n\t\t\tvar slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tvar horizontalSlides = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) );\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( toArray( slide.parentNode.querySelectorAll( 'section' ) ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tvar hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tvar currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h: h, v: v, f: f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn toArray( dom.wrapper.querySelectorAll( SLIDES_SELECTOR + ':not(.stack)' ));\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tvar horizontalSlide = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR )[ x ];\n\t\tvar verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {number} x Horizontal background index\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\t// When printing to PDF the slide backgrounds are nested\n\t\t// inside of the slides\n\t\tif( isPrintingPDF() ) {\n\t\t\tvar slide = getSlide( x, y );\n\t\t\tif( slide ) {\n\t\t\t\treturn slide.slideBackgroundElement;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tvar horizontalBackground = dom.wrapper.querySelectorAll( '.backgrounds>.slide-background' )[ x ];\n\t\tvar verticalBackgrounds = horizontalBackground && horizontalBackground.querySelectorAll( '.slide-background' );\n\n\t\tif( verticalBackgrounds && verticalBackgrounds.length && typeof y === 'number' ) {\n\t\t\treturn verticalBackgrounds ? verticalBackgrounds[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalBackground;\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. As an <aside class=\"notes\"> inside of the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tfunction getSlideNotes( slide ) {\n\n\t\t// Default to the current slide\n\t\tslide = slide || currentSlide;\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using an <aside class=\"notes\"> element\n\t\tvar notesElement = slide.querySelector( 'aside.notes' );\n\t\tif( notesElement ) {\n\t\t\treturn notesElement.innerHTML;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tvar indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: isOverview()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( deserialize( state.indexh ), deserialize( state.indexv ), deserialize( state.indexf ) );\n\n\t\t\tvar pausedFlag = deserialize( state.paused ),\n\t\t\t\toverviewFlag = deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== isOverview() ) {\n\t\t\t\ttoggleOverview( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tfunction sortFragments( fragments ) {\n\n\t\tfragments = toArray( fragments );\n\n\t\tvar ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( function( fragment, i ) {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tvar index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tvar index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( function( group ) {\n\t\t\tgroup.forEach( function( fragment ) {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn sorted;\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tfunction navigateFragment( index, offset ) {\n\n\t\tif( currentSlide && config.fragments ) {\n\n\t\t\tvar fragments = sortFragments( currentSlide.querySelectorAll( '.fragment' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tvar lastVisibleFragment = sortFragments( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If an offset is specified, apply it to the index\n\t\t\t\tif( typeof offset === 'number' ) {\n\t\t\t\t\tindex += offset;\n\t\t\t\t}\n\n\t\t\t\tvar fragmentsShown = [],\n\t\t\t\t\tfragmentsHidden = [];\n\n\t\t\t\ttoArray( fragments ).forEach( function( element, i ) {\n\n\t\t\t\t\tif( element.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( element.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tif( !element.classList.contains( 'visible' ) ) fragmentsShown.push( element );\n\t\t\t\t\t\telement.classList.add( 'visible' );\n\t\t\t\t\t\telement.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\tdom.statusDiv.textContent = getStatusText( element );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\telement.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tstartEmbeddedContent( element );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( element.classList.contains( 'visible' ) ) fragmentsHidden.push( element );\n\t\t\t\t\t\telement.classList.remove( 'visible' );\n\t\t\t\t\t\telement.classList.remove( 'current-fragment' );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tif( fragmentsHidden.length ) {\n\t\t\t\t\tdispatchEvent( 'fragmenthidden', { fragment: fragmentsHidden[0], fragments: fragmentsHidden } );\n\t\t\t\t}\n\n\t\t\t\tif( fragmentsShown.length ) {\n\t\t\t\t\tdispatchEvent( 'fragmentshown', { fragment: fragmentsShown[0], fragments: fragmentsShown } );\n\t\t\t\t}\n\n\t\t\t\tupdateControls();\n\t\t\t\tupdateProgress();\n\n\t\t\t\treturn !!( fragmentsShown.length || fragmentsHidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tfunction nextFragment() {\n\n\t\treturn navigateFragment( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tfunction previousFragment() {\n\n\t\treturn navigateFragment( null, -1 );\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide ) {\n\n\t\t\tvar fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tvar fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tvar parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tvar slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\t\t\t}\n\n\t\t\t// If there are media elements with data-autoplay,\n\t\t\t// automatically set the autoSlide duration to the\n\t\t\t// length of that media. Not applicable if the slide\n\t\t\t// is divided up into fragments.\n\t\t\t// playbackRate is accounted for in the duration.\n\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\ttoArray( currentSlide.querySelectorAll( 'video, audio' ) ).forEach( function( el ) {\n\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !isOverview() && ( !Reveal.isLastSlide() || availableFragments().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( function() {\n\t\t\t\t\ttypeof config.autoSlideMethod === 'function' ? config.autoSlideMethod() : navigateNext();\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent( 'autoslidepaused' );\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent( 'autoslideresumed' );\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft() {\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( isOverview() || nextFragment() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1 );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( isOverview() || previousFragment() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateRight() {\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( isOverview() || previousFragment() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1 );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( isOverview() || nextFragment() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateUp() {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( isOverview() || previousFragment() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown() {\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( isOverview() || nextFragment() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev() {\n\n\t\t// Prioritize revealing fragments\n\t\tif( previousFragment() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tvar previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR + '.future' ) ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR + '.past' ) ).pop();\n\t\t\t\t}\n\n\t\t\t\tif( previousSlide ) {\n\t\t\t\t\tvar v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tvar h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext() {\n\n\t\t// Prioritize revealing fragments\n\t\tif( nextFragment() === false ) {\n\t\t\tif( availableRoutes().down ) {\n\t\t\t\tnavigateDown();\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tfunction isSwipePrevented( target ) {\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\ttoggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onDocumentKeyDown( event ) {\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition() === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tvar autoSlideWasPaused = autoSlidePaused;\n\n\t\tonUserInput( event );\n\n\t\t// Check if there's a focused element that could be using\n\t\t// the keyboard\n\t\tvar activeElementIsCE = document.activeElement && document.activeElement.contentEditable !== 'inherit';\n\t\tvar activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tvar activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || (event.shiftKey && event.keyCode !== 32) || event.altKey || event.ctrlKey || event.metaKey ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tvar resumeKeyCodes = [66,86,190,191];\n\t\tvar key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( isPaused() && resumeKeyCodes.indexOf( event.keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === event.keyCode ) {\n\n\t\t\t\t\tvar value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tReveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\tswitch( event.keyCode ) {\n\t\t\t\t// p, page up\n\t\t\t\tcase 80: case 33: navigatePrev(); break;\n\t\t\t\t// n, page down\n\t\t\t\tcase 78: case 34: navigateNext(); break;\n\t\t\t\t// h, left\n\t\t\t\tcase 72: case 37: navigateLeft(); break;\n\t\t\t\t// l, right\n\t\t\t\tcase 76: case 39: navigateRight(); break;\n\t\t\t\t// k, up\n\t\t\t\tcase 75: case 38: navigateUp(); break;\n\t\t\t\t// j, down\n\t\t\t\tcase 74: case 40: navigateDown(); break;\n\t\t\t\t// home\n\t\t\t\tcase 36: slide( 0 ); break;\n\t\t\t\t// end\n\t\t\t\tcase 35: slide( Number.MAX_VALUE ); break;\n\t\t\t\t// space\n\t\t\t\tcase 32: isOverview() ? deactivateOverview() : event.shiftKey ? navigatePrev() : navigateNext(); break;\n\t\t\t\t// return\n\t\t\t\tcase 13: isOverview() ? deactivateOverview() : triggered = false; break;\n\t\t\t\t// two-spot, semicolon, b, v, period, Logitech presenter tools \"black screen\" button\n\t\t\t\tcase 58: case 59: case 66: case 86: case 190: case 191: togglePause(); break;\n\t\t\t\t// f\n\t\t\t\tcase 70: enterFullscreen(); break;\n\t\t\t\t// a\n\t\t\t\tcase 65: if ( config.autoSlideStoppable ) toggleAutoSlide( autoSlideWasPaused ); break;\n\t\t\t\tdefault:\n\t\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if ( ( event.keyCode === 27 || event.keyCode === 79 ) && features.transforms3d ) {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoggleOverview();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tcueAutoSlide();\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onTouchStart( event ) {\n\n\t\tif( isSwipePrevented( event.target ) ) return true;\n\n\t\ttouch.startX = event.touches[0].clientX;\n\t\ttouch.startY = event.touches[0].clientY;\n\t\ttouch.startCount = event.touches.length;\n\n\t\t// If there's two touches we need to memorize the distance\n\t\t// between those two points to detect pinching\n\t\tif( event.touches.length === 2 && config.overview ) {\n\t\t\ttouch.startSpan = distanceBetween( {\n\t\t\t\tx: event.touches[1].clientX,\n\t\t\t\ty: event.touches[1].clientY\n\t\t\t}, {\n\t\t\t\tx: touch.startX,\n\t\t\t\ty: touch.startY\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onTouchMove( event ) {\n\n\t\tif( isSwipePrevented( event.target ) ) return true;\n\n\t\t// Each touch should only trigger one action\n\t\tif( !touch.captured ) {\n\t\t\tonUserInput( event );\n\n\t\t\tvar currentX = event.touches[0].clientX;\n\t\t\tvar currentY = event.touches[0].clientY;\n\n\t\t\t// If the touch started with two points and still has\n\t\t\t// two active touches; test for the pinch gesture\n\t\t\tif( event.touches.length === 2 && touch.startCount === 2 && config.overview ) {\n\n\t\t\t\t// The current distance in pixels between the two touch points\n\t\t\t\tvar currentSpan = distanceBetween( {\n\t\t\t\t\tx: event.touches[1].clientX,\n\t\t\t\t\ty: event.touches[1].clientY\n\t\t\t\t}, {\n\t\t\t\t\tx: touch.startX,\n\t\t\t\t\ty: touch.startY\n\t\t\t\t} );\n\n\t\t\t\t// If the span is larger than the desire amount we've got\n\t\t\t\t// ourselves a pinch\n\t\t\t\tif( Math.abs( touch.startSpan - currentSpan ) > touch.threshold ) {\n\t\t\t\t\ttouch.captured = true;\n\n\t\t\t\t\tif( currentSpan < touch.startSpan ) {\n\t\t\t\t\t\tactivateOverview();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdeactivateOverview();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t}\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\telse if( event.touches.length === 1 && touch.startCount !== 2 ) {\n\n\t\t\t\tvar deltaX = currentX - touch.startX,\n\t\t\t\t\tdeltaY = currentY - touch.startY;\n\n\t\t\t\tif( deltaX > touch.threshold && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\ttouch.captured = true;\n\t\t\t\t\tnavigateLeft();\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -touch.threshold && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\ttouch.captured = true;\n\t\t\t\t\tnavigateRight();\n\t\t\t\t}\n\t\t\t\telse if( deltaY > touch.threshold ) {\n\t\t\t\t\ttouch.captured = true;\n\t\t\t\t\tnavigateUp();\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -touch.threshold ) {\n\t\t\t\t\ttouch.captured = true;\n\t\t\t\t\tnavigateDown();\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( touch.captured || isVerticalSlide( currentSlide ) ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( UA.match( /android/gi ) ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onTouchEnd( event ) {\n\n\t\ttouch.captured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tonTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tonTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tonTouchEnd( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - lastMouseWheelStep > 600 ) {\n\n\t\t\tlastMouseWheelStep = Date.now();\n\n\t\t\tvar delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tnavigateNext();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tnavigatePrev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tfunction onProgressClicked( event ) {\n\n\t\tonUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tvar slidesTotal = toArray( dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ) ).length;\n\t\tvar slideIndex = Math.floor( ( event.clientX / dom.wrapper.offsetWidth ) * slidesTotal );\n\n\t\tif( config.rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tslide( slideIndex );\n\n\t}\n\n\t/**\n\t * Event handler for navigation control buttons.\n\t */\n\tfunction onNavigateLeftClicked( event ) { event.preventDefault(); onUserInput(); navigateLeft(); }\n\tfunction onNavigateRightClicked( event ) { event.preventDefault(); onUserInput(); navigateRight(); }\n\tfunction onNavigateUpClicked( event ) { event.preventDefault(); onUserInput(); navigateUp(); }\n\tfunction onNavigateDownClicked( event ) { event.preventDefault(); onUserInput(); navigateDown(); }\n\tfunction onNavigatePrevClicked( event ) { event.preventDefault(); onUserInput(); navigatePrev(); }\n\tfunction onNavigateNextClicked( event ) { event.preventDefault(); onUserInput(); navigateNext(); }\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowHashChange( event ) {\n\n\t\treadURL();\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\tvar isHidden =  document.webkitHidden ||\n\t\t\t\t\t\tdocument.msHidden ||\n\t\t\t\t\t\tdocument.hidden;\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( isHidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onOverviewSlideClicked( event ) {\n\n\t\t// TODO There's a bug here where the event listeners are not\n\t\t// removed after deactivating the overview.\n\t\tif( eventsAreBound && isOverview() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tdeactivateOverview();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tvar h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tvar url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( Reveal.isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------ PLAYBACK COMPONENT ------------------------//\n\t// --------------------------------------------------------------------//\n\n\n\t/**\n\t * Constructor for the playback component, which displays\n\t * play/pause/progress controls.\n\t *\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current progress on a range\n\t * of 0-1\n\t */\n\tfunction Playback( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\t/**\n\t * @param value\n\t */\n\tPlayback.prototype.setPlaying = function( value ) {\n\n\t\tvar wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t};\n\n\tPlayback.prototype.animate = function() {\n\n\t\tvar progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\tfeatures.requestAnimationFrameMethod.call( window, this.animate.bind( this ) );\n\t\t}\n\n\t};\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\tPlayback.prototype.render = function() {\n\n\t\tvar progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tvar endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tvar startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = '#666';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t};\n\n\tPlayback.prototype.on = function( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t};\n\n\tPlayback.prototype.off = function( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t};\n\n\tPlayback.prototype.destroy = function() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t};\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\n\tReveal = {\n\t\tVERSION: VERSION,\n\n\t\tinitialize: initialize,\n\t\tconfigure: configure,\n\t\tsync: sync,\n\n\t\t// Navigation methods\n\t\tslide: slide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: navigateFragment,\n\t\tprevFragment: previousFragment,\n\t\tnextFragment: nextFragment,\n\n\t\t// Deprecated aliases\n\t\tnavigateTo: slide,\n\t\tnavigateLeft: navigateLeft,\n\t\tnavigateRight: navigateRight,\n\t\tnavigateUp: navigateUp,\n\t\tnavigateDown: navigateDown,\n\t\tnavigatePrev: navigatePrev,\n\t\tnavigateNext: navigateNext,\n\n\t\t// Forces an update in slide layout\n\t\tlayout: layout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle: shuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes: availableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: availableFragments,\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp: toggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: toggleOverview,\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause: togglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide: toggleAutoSlide,\n\n\t\t// State checks\n\t\tisOverview: isOverview,\n\t\tisPaused: isPaused,\n\t\tisAutoSliding: isAutoSliding,\n\n\t\t// Adds or removes all internal event listeners (such as keyboard)\n\t\taddEventListeners: addEventListeners,\n\t\tremoveEventListeners: removeEventListeners,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState: getState,\n\t\tsetState: setState,\n\n\t\t// Presentation progress\n\t\tgetSlidePastCount: getSlidePastCount,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress: getProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices: getIndices,\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides: getSlides,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides: getTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide: getSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground: getSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: getSlideNotes,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: function() {\n\t\t\treturn previousSlide;\n\t\t},\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: function() {\n\t\t\treturn currentSlide;\n\t\t},\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: function() {\n\t\t\treturn scale;\n\t\t},\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: function() {\n\t\t\treturn config;\n\t\t},\n\n\t\t// Helper method, retrieves query string as a key/value hash\n\t\tgetQueryHash: function() {\n\t\t\tvar query = {};\n\n\t\t\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, function(a) {\n\t\t\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t\t\t} );\n\n\t\t\t// Basic deserialization\n\t\t\tfor( var i in query ) {\n\t\t\t\tvar value = query[ i ];\n\n\t\t\t\tquery[ i ] = deserialize( unescape( value ) );\n\t\t\t}\n\n\t\t\treturn query;\n\t\t},\n\n\t\t// Returns true if we're currently on the first slide\n\t\tisFirstSlide: function() {\n\t\t\treturn ( indexh === 0 && indexv === 0 );\n\t\t},\n\n\t\t// Returns true if we're currently on the last slide\n\t\tisLastSlide: function() {\n\t\t\tif( currentSlide ) {\n\t\t\t\t// Does this slide has next a sibling?\n\t\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: function() {\n\t\t\treturn loaded;\n\t\t},\n\n\t\t// Forward event binding to the reveal DOM element\n\t\taddEventListener: function( type, listener, useCapture ) {\n\t\t\tif( 'addEventListener' in window ) {\n\t\t\t\t( dom.wrapper || document.querySelector( '.reveal' ) ).addEventListener( type, listener, useCapture );\n\t\t\t}\n\t\t},\n\t\tremoveEventListener: function( type, listener, useCapture ) {\n\t\t\tif( 'addEventListener' in window ) {\n\t\t\t\t( dom.wrapper || document.querySelector( '.reveal' ) ).removeEventListener( type, listener, useCapture );\n\t\t\t}\n\t\t},\n\n\t\t// Programatically triggers a keyboard event\n\t\ttriggerKey: function( keyCode ) {\n\t\t\tonDocumentKeyDown( { keyCode: keyCode } );\n\t\t},\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: function( key, value ) {\n\t\t\tkeyboardShortcuts[key] = value;\n\t\t}\n\t};\n\n\treturn Reveal;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reveal.js/js/reveal.js\n// module id = 77\n// module chunks = 0","/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\nif(typeof document!==\"undefined\"&&!(\"classList\" in document.createElement(\"a\"))){(function(j){var a=\"classList\",f=\"prototype\",m=(j.HTMLElement||j.Element)[f],b=Object,k=String[f].trim||function(){return this.replace(/^\\s+|\\s+$/g,\"\")},c=Array[f].indexOf||function(q){var p=0,o=this.length;for(;p<o;p++){if(p in this&&this[p]===q){return p}}return -1},n=function(o,p){this.name=o;this.code=DOMException[o];this.message=p},g=function(p,o){if(o===\"\"){throw new n(\"SYNTAX_ERR\",\"An invalid or illegal string was specified\")}if(/\\s/.test(o)){throw new n(\"INVALID_CHARACTER_ERR\",\"String contains an invalid character\")}return c.call(p,o)},d=function(s){var r=k.call(s.className),q=r?r.split(/\\s+/):[],p=0,o=q.length;for(;p<o;p++){this.push(q[p])}this._updateClassName=function(){s.className=this.toString()}},e=d[f]=[],i=function(){return new d(this)};n[f]=Error[f];e.item=function(o){return this[o]||null};e.contains=function(o){o+=\"\";return g(this,o)!==-1};e.add=function(o){o+=\"\";if(g(this,o)===-1){this.push(o);this._updateClassName()}};e.remove=function(p){p+=\"\";var o=g(this,p);if(o!==-1){this.splice(o,1);this._updateClassName()}};e.toggle=function(o){o+=\"\";if(g(this,o)===-1){this.add(o)}else{this.remove(o)}};e.toString=function(){return this.join(\" \")};if(b.defineProperty){var l={get:i,enumerable:true,configurable:true};try{b.defineProperty(m,a,l)}catch(h){if(h.number===-2146823252){l.enumerable=false;b.defineProperty(m,a,l)}}}else{if(b[f].__defineGetter__){m.__defineGetter__(a,i)}}}(self))};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reveal.js/lib/js/classList.js\n// module id = 78\n// module chunks = 0","﻿/*! head.core - v1.0.2 */\n(function(n,t){\"use strict\";function r(n){a[a.length]=n}function k(n){var t=new RegExp(\" ?\\\\b\"+n+\"\\\\b\");c.className=c.className.replace(t,\"\")}function p(n,t){for(var i=0,r=n.length;i<r;i++)t.call(n,n[i],i)}function tt(){var t,e,f,o;c.className=c.className.replace(/ (w-|eq-|gt-|gte-|lt-|lte-|portrait|no-portrait|landscape|no-landscape)\\d+/g,\"\");t=n.innerWidth||c.clientWidth;e=n.outerWidth||n.screen.width;u.screen.innerWidth=t;u.screen.outerWidth=e;r(\"w-\"+t);p(i.screens,function(n){t>n?(i.screensCss.gt&&r(\"gt-\"+n),i.screensCss.gte&&r(\"gte-\"+n)):t<n?(i.screensCss.lt&&r(\"lt-\"+n),i.screensCss.lte&&r(\"lte-\"+n)):t===n&&(i.screensCss.lte&&r(\"lte-\"+n),i.screensCss.eq&&r(\"e-q\"+n),i.screensCss.gte&&r(\"gte-\"+n))});f=n.innerHeight||c.clientHeight;o=n.outerHeight||n.screen.height;u.screen.innerHeight=f;u.screen.outerHeight=o;u.feature(\"portrait\",f>t);u.feature(\"landscape\",f<t)}function it(){n.clearTimeout(b);b=n.setTimeout(tt,50)}var y=n.document,rt=n.navigator,ut=n.location,c=y.documentElement,a=[],i={screens:[240,320,480,640,768,800,1024,1280,1440,1680,1920],screensCss:{gt:!0,gte:!1,lt:!0,lte:!1,eq:!1},browsers:[{ie:{min:6,max:11}}],browserCss:{gt:!0,gte:!1,lt:!0,lte:!1,eq:!0},html5:!0,page:\"-page\",section:\"-section\",head:\"head\"},v,u,s,w,o,h,l,d,f,g,nt,e,b;if(n.head_conf)for(v in n.head_conf)n.head_conf[v]!==t&&(i[v]=n.head_conf[v]);u=n[i.head]=function(){u.ready.apply(null,arguments)};u.feature=function(n,t,i){return n?(Object.prototype.toString.call(t)===\"[object Function]\"&&(t=t.call()),r((t?\"\":\"no-\")+n),u[n]=!!t,i||(k(\"no-\"+n),k(n),u.feature()),u):(c.className+=\" \"+a.join(\" \"),a=[],u)};u.feature(\"js\",!0);s=rt.userAgent.toLowerCase();w=/mobile|android|kindle|silk|midp|phone|(windows .+arm|touch)/.test(s);u.feature(\"mobile\",w,!0);u.feature(\"desktop\",!w,!0);s=/(chrome|firefox)[ \\/]([\\w.]+)/.exec(s)||/(iphone|ipad|ipod)(?:.*version)?[ \\/]([\\w.]+)/.exec(s)||/(android)(?:.*version)?[ \\/]([\\w.]+)/.exec(s)||/(webkit|opera)(?:.*version)?[ \\/]([\\w.]+)/.exec(s)||/(msie) ([\\w.]+)/.exec(s)||/(trident).+rv:(\\w.)+/.exec(s)||[];o=s[1];h=parseFloat(s[2]);switch(o){case\"msie\":case\"trident\":o=\"ie\";h=y.documentMode||h;break;case\"firefox\":o=\"ff\";break;case\"ipod\":case\"ipad\":case\"iphone\":o=\"ios\";break;case\"webkit\":o=\"safari\"}for(u.browser={name:o,version:h},u.browser[o]=!0,l=0,d=i.browsers.length;l<d;l++)for(f in i.browsers[l])if(o===f)for(r(f),g=i.browsers[l][f].min,nt=i.browsers[l][f].max,e=g;e<=nt;e++)h>e?(i.browserCss.gt&&r(\"gt-\"+f+e),i.browserCss.gte&&r(\"gte-\"+f+e)):h<e?(i.browserCss.lt&&r(\"lt-\"+f+e),i.browserCss.lte&&r(\"lte-\"+f+e)):h===e&&(i.browserCss.lte&&r(\"lte-\"+f+e),i.browserCss.eq&&r(\"eq-\"+f+e),i.browserCss.gte&&r(\"gte-\"+f+e));else r(\"no-\"+f);r(o);r(o+parseInt(h,10));i.html5&&o===\"ie\"&&h<9&&p(\"abbr|article|aside|audio|canvas|details|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|progress|section|summary|time|video\".split(\"|\"),function(n){y.createElement(n)});p(ut.pathname.split(\"/\"),function(n,u){if(this.length>2&&this[u+1]!==t)u&&r(this.slice(u,u+1).join(\"-\").toLowerCase()+i.section);else{var f=n||\"index\",e=f.indexOf(\".\");e>0&&(f=f.substring(0,e));c.id=f.toLowerCase()+i.page;u||r(\"root\"+i.section)}});u.screen={height:n.screen.height,width:n.screen.width};tt();b=0;n.addEventListener?n.addEventListener(\"resize\",it,!1):n.attachEvent(\"onresize\",it)})(window);\n/*! head.css3 - v1.0.0 */\n(function(n,t){\"use strict\";function a(n){for(var r in n)if(i[n[r]]!==t)return!0;return!1}function r(n){var t=n.charAt(0).toUpperCase()+n.substr(1),i=(n+\" \"+c.join(t+\" \")+t).split(\" \");return!!a(i)}var h=n.document,o=h.createElement(\"i\"),i=o.style,s=\" -o- -moz- -ms- -webkit- -khtml- \".split(\" \"),c=\"Webkit Moz O ms Khtml\".split(\" \"),l=n.head_conf&&n.head_conf.head||\"head\",u=n[l],f={gradient:function(){var n=\"background-image:\";return i.cssText=(n+s.join(\"gradient(linear,left top,right bottom,from(#9f9),to(#fff));\"+n)+s.join(\"linear-gradient(left top,#eee,#fff);\"+n)).slice(0,-n.length),!!i.backgroundImage},rgba:function(){return i.cssText=\"background-color:rgba(0,0,0,0.5)\",!!i.backgroundColor},opacity:function(){return o.style.opacity===\"\"},textshadow:function(){return i.textShadow===\"\"},multiplebgs:function(){i.cssText=\"background:url(https://),url(https://),red url(https://)\";var n=(i.background||\"\").match(/url/g);return Object.prototype.toString.call(n)===\"[object Array]\"&&n.length===3},boxshadow:function(){return r(\"boxShadow\")},borderimage:function(){return r(\"borderImage\")},borderradius:function(){return r(\"borderRadius\")},cssreflections:function(){return r(\"boxReflect\")},csstransforms:function(){return r(\"transform\")},csstransitions:function(){return r(\"transition\")},touch:function(){return\"ontouchstart\"in n},retina:function(){return n.devicePixelRatio>1},fontface:function(){var t=u.browser.name,n=u.browser.version;switch(t){case\"ie\":return n>=9;case\"chrome\":return n>=13;case\"ff\":return n>=6;case\"ios\":return n>=5;case\"android\":return!1;case\"webkit\":return n>=5.1;case\"opera\":return n>=10;default:return!1}}};for(var e in f)f[e]&&u.feature(e,f[e].call(),!0);u.feature()})(window);\n/*! head.load - v1.0.3 */\n(function(n,t){\"use strict\";function w(){}function u(n,t){if(n){typeof n==\"object\"&&(n=[].slice.call(n));for(var i=0,r=n.length;i<r;i++)t.call(n,n[i],i)}}function it(n,i){var r=Object.prototype.toString.call(i).slice(8,-1);return i!==t&&i!==null&&r===n}function s(n){return it(\"Function\",n)}function a(n){return it(\"Array\",n)}function et(n){var i=n.split(\"/\"),t=i[i.length-1],r=t.indexOf(\"?\");return r!==-1?t.substring(0,r):t}function f(n){(n=n||w,n._done)||(n(),n._done=1)}function ot(n,t,r,u){var f=typeof n==\"object\"?n:{test:n,success:!t?!1:a(t)?t:[t],failure:!r?!1:a(r)?r:[r],callback:u||w},e=!!f.test;return e&&!!f.success?(f.success.push(f.callback),i.load.apply(null,f.success)):e||!f.failure?u():(f.failure.push(f.callback),i.load.apply(null,f.failure)),i}function v(n){var t={},i,r;if(typeof n==\"object\")for(i in n)!n[i]||(t={name:i,url:n[i]});else t={name:et(n),url:n};return(r=c[t.name],r&&r.url===t.url)?r:(c[t.name]=t,t)}function y(n){n=n||c;for(var t in n)if(n.hasOwnProperty(t)&&n[t].state!==l)return!1;return!0}function st(n){n.state=ft;u(n.onpreload,function(n){n.call()})}function ht(n){n.state===t&&(n.state=nt,n.onpreload=[],rt({url:n.url,type:\"cache\"},function(){st(n)}))}function ct(){var n=arguments,t=n[n.length-1],r=[].slice.call(n,1),f=r[0];return(s(t)||(t=null),a(n[0]))?(n[0].push(t),i.load.apply(null,n[0]),i):(f?(u(r,function(n){s(n)||!n||ht(v(n))}),b(v(n[0]),s(f)?f:function(){i.load.apply(null,r)})):b(v(n[0])),i)}function lt(){var n=arguments,t=n[n.length-1],r={};return(s(t)||(t=null),a(n[0]))?(n[0].push(t),i.load.apply(null,n[0]),i):(u(n,function(n){n!==t&&(n=v(n),r[n.name]=n)}),u(n,function(n){n!==t&&(n=v(n),b(n,function(){y(r)&&f(t)}))}),i)}function b(n,t){if(t=t||w,n.state===l){t();return}if(n.state===tt){i.ready(n.name,t);return}if(n.state===nt){n.onpreload.push(function(){b(n,t)});return}n.state=tt;rt(n,function(){n.state=l;t();u(h[n.name],function(n){f(n)});o&&y()&&u(h.ALL,function(n){f(n)})})}function at(n){n=n||\"\";var t=n.split(\"?\")[0].split(\".\");return t[t.length-1].toLowerCase()}function rt(t,i){function e(t){t=t||n.event;u.onload=u.onreadystatechange=u.onerror=null;i()}function o(f){f=f||n.event;(f.type===\"load\"||/loaded|complete/.test(u.readyState)&&(!r.documentMode||r.documentMode<9))&&(n.clearTimeout(t.errorTimeout),n.clearTimeout(t.cssTimeout),u.onload=u.onreadystatechange=u.onerror=null,i())}function s(){if(t.state!==l&&t.cssRetries<=20){for(var i=0,f=r.styleSheets.length;i<f;i++)if(r.styleSheets[i].href===u.href){o({type:\"load\"});return}t.cssRetries++;t.cssTimeout=n.setTimeout(s,250)}}var u,h,f;i=i||w;h=at(t.url);h===\"css\"?(u=r.createElement(\"link\"),u.type=\"text/\"+(t.type||\"css\"),u.rel=\"stylesheet\",u.href=t.url,t.cssRetries=0,t.cssTimeout=n.setTimeout(s,500)):(u=r.createElement(\"script\"),u.type=\"text/\"+(t.type||\"javascript\"),u.src=t.url);u.onload=u.onreadystatechange=o;u.onerror=e;u.async=!1;u.defer=!1;t.errorTimeout=n.setTimeout(function(){e({type:\"timeout\"})},7e3);f=r.head||r.getElementsByTagName(\"head\")[0];f.insertBefore(u,f.lastChild)}function vt(){for(var t,u=r.getElementsByTagName(\"script\"),n=0,f=u.length;n<f;n++)if(t=u[n].getAttribute(\"data-headjs-load\"),!!t){i.load(t);return}}function yt(n,t){var v,p,e;return n===r?(o?f(t):d.push(t),i):(s(n)&&(t=n,n=\"ALL\"),a(n))?(v={},u(n,function(n){v[n]=c[n];i.ready(n,function(){y(v)&&f(t)})}),i):typeof n!=\"string\"||!s(t)?i:(p=c[n],p&&p.state===l||n===\"ALL\"&&y()&&o)?(f(t),i):(e=h[n],e?e.push(t):e=h[n]=[t],i)}function e(){if(!r.body){n.clearTimeout(i.readyTimeout);i.readyTimeout=n.setTimeout(e,50);return}o||(o=!0,vt(),u(d,function(n){f(n)}))}function k(){r.addEventListener?(r.removeEventListener(\"DOMContentLoaded\",k,!1),e()):r.readyState===\"complete\"&&(r.detachEvent(\"onreadystatechange\",k),e())}var r=n.document,d=[],h={},c={},ut=\"async\"in r.createElement(\"script\")||\"MozAppearance\"in r.documentElement.style||n.opera,o,g=n.head_conf&&n.head_conf.head||\"head\",i=n[g]=n[g]||function(){i.ready.apply(null,arguments)},nt=1,ft=2,tt=3,l=4,p;if(r.readyState===\"complete\")e();else if(r.addEventListener)r.addEventListener(\"DOMContentLoaded\",k,!1),n.addEventListener(\"load\",e,!1);else{r.attachEvent(\"onreadystatechange\",k);n.attachEvent(\"onload\",e);p=!1;try{p=!n.frameElement&&r.documentElement}catch(wt){}p&&p.doScroll&&function pt(){if(!o){try{p.doScroll(\"left\")}catch(t){n.clearTimeout(i.readyTimeout);i.readyTimeout=n.setTimeout(pt,50);return}e()}}()}i.load=i.js=ut?lt:ct;i.test=ot;i.ready=yt;i.ready(r,function(){y()&&u(h.ALL,function(n){f(n)});i.feature&&i.feature(\"domloaded\",!0)})})(window);\n/*\n//# sourceMappingURL=head.min.js.map\n*/\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reveal.js/lib/js/head.min.js\n// module id = 79\n// module chunks = 0","document.createElement('header');\ndocument.createElement('nav');\ndocument.createElement('section');\ndocument.createElement('article');\ndocument.createElement('aside');\ndocument.createElement('footer');\ndocument.createElement('hgroup');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/reveal.js/lib/js/html5shiv.js\n// module id = 80\n// module chunks = 0"],"sourceRoot":""}